TITLE: Initialize Gen AI Client for Vertex AI
DESCRIPTION: Creates an instance of the 'genai.Client' configured for the Vertex AI API. This setup requires specifying 'vertexai=True' along with your Google Cloud 'project' ID and 'location'.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google import genai

# Only run this block for Vertex AI API
client = genai.Client(
    vertexai=True, project='your-project-id', location='us-central1'
)
```

----------------------------------------

TITLE: Initialize Gen AI Client Using Environment Variables
DESCRIPTION: Creates an instance of the 'genai.Client' that automatically detects and uses configuration settings provided through environment variables. This simplifies client setup in various deployment environments.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google import genai

client = genai.Client()
```

----------------------------------------

TITLE: Initialize Gen AI Client for Gemini Developer API
DESCRIPTION: Creates an instance of the 'genai.Client' specifically configured for the Gemini Developer API. This requires providing your 'GEMINI_API_KEY' for authentication.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google import genai

# Only run this block for Gemini Developer API
client = genai.Client(api_key='GEMINI_API_KEY')
```

----------------------------------------

TITLE: Import Google Gen AI Modules
DESCRIPTION: Imports the core 'genai' module and the 'types' module from the Google Gen AI SDK. These imports are essential for accessing the SDK's functionalities and data structures.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google import genai
from google.genai import types
```

----------------------------------------

TITLE: Send Synchronous Streaming Chat Messages
DESCRIPTION: Shows how to establish a chat session and send messages synchronously with streaming. The response is received in chunks, which are then printed incrementally as they arrive, providing a more interactive experience.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
chat = client.chats.create(model='gemini-2.0-flash-001')
for chunk in chat.send_message_stream('tell me a story'):
    print(chunk.text, end='')  # end='' is optional, for demo purposes.
```

----------------------------------------

TITLE: Send Synchronous Non-Streaming Chat Messages
DESCRIPTION: Illustrates how to create a chat session and send messages synchronously without streaming. The full response text is received and printed after each message, allowing for multi-turn conversations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
chat = client.chats.create(model='gemini-2.0-flash-001')
response = chat.send_message('tell me a story')
print(response.text)
response = chat.send_message('summarize the story you told me in 1 sentence')
print(response.text)
```

----------------------------------------

TITLE: Generate Content with Text Input using Gemini API
DESCRIPTION: Shows a basic example of generating content by passing a simple text string to the 'client.models.generate_content' method and printing the response.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
response = client.models.generate_content(
    model='gemini-2.0-flash-001', contents='Why is the sky blue?'
)
print(response.text)
```

----------------------------------------

TITLE: Install Google Gen AI Python SDK
DESCRIPTION: Installs the Google Gen AI Python SDK using pip, the Python package installer. This command ensures the necessary libraries are available for development.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Shell
CODE:
```
pip install google-genai
```

----------------------------------------

TITLE: Send Asynchronous Streaming Chat Messages
DESCRIPTION: Illustrates how to send chat messages asynchronously with streaming. It utilizes `client.aio.chats.create` for an asynchronous chat session and `async for chunk in await chat.send_message_stream` to process streaming responses in a non-blocking manner.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
chat = client.aio.chats.create(model='gemini-2.0-flash-001')
async for chunk in await chat.send_message_stream('tell me a story'):
    print(chunk.text, end='') # end='' is optional, for demo purposes.
```

----------------------------------------

TITLE: Generate Content with Structured JSON Response
DESCRIPTION: This example demonstrates how to configure the `generate_content` method to return a structured JSON response. It defines an `InstrumentEnum` class and uses `response_mime_type` and `response_schema` to guide the model's output format.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
class InstrumentEnum(Enum):
    PERCUSSION = 'Percussion'
    STRING = 'String'
    WOODWIND = 'Woodwind'
    BRASS = 'Brass'
    KEYBOARD = 'Keyboard'

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents='What instrument plays multiple notes at once?',
    config={
        'response_mime_type': 'application/json',
        'response_schema': InstrumentEnum,
    },
)
print(response.text)
```

----------------------------------------

TITLE: Stream Content Asynchronously from Gemini Model
DESCRIPTION: This snippet demonstrates asynchronous streaming of content from the Gemini model. It uses `async for` with `client.aio.models.generate_content_stream` to process chunks of text as they become available.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
async for chunk in await client.aio.models.generate_content_stream(
    model='gemini-2.0-flash-001', contents='Tell me a story in 300 words.'
):
    print(chunk.text, end='')
```

----------------------------------------

TITLE: SDK Conversion of List of Strings for 'contents' Argument
DESCRIPTION: Illustrates how the SDK processes a list of strings, converting them into a single 'types.UserContent' object with multiple text parts, maintaining the 'user' role.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
[
types.UserContent(
    parts=[
    types.Part.from_text(text='Why is the sky blue?'),
    types.Part.from_text(text='Why is the cloud white?'),
    ]
)
]
```

----------------------------------------

TITLE: Embed Single Text Content String
DESCRIPTION: This snippet shows how to generate an embedding for a single piece of text using `client.models.embed_content`. Embeddings are numerical representations of text, useful for similarity searches and other NLP tasks.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
response = client.models.embed_content(
    model='text-embedding-004',
    contents='why is the sky blue?',
)
print(response)
```

----------------------------------------

TITLE: Configure Gemini Developer API Key via Environment Variable
DESCRIPTION: Sets the 'GOOGLE_API_KEY' environment variable, allowing the Gen AI client to automatically pick up the API key for the Gemini Developer API without explicit code configuration.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Shell
CODE:
```
export GOOGLE_API_KEY='your-api-key'
```

----------------------------------------

TITLE: Set Proxy Environment Variables for HTTP/S
DESCRIPTION: Demonstrates how to set standard HTTPS_PROXY and SSL_CERT_FILE environment variables, which are used by httpx and aiohttp libraries for proxy configuration before client initialization.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Shell
CODE:
```
export HTTPS_PROXY='http://username:password@proxy_uri:port'
export SSL_CERT_FILE='client.pem'
```

----------------------------------------

TITLE: Define JSON Response Schema with Dictionary in Google GenAI
DESCRIPTION: This example illustrates how to provide a JSON schema directly as a Python dictionary to the `response_schema` parameter. This allows for defining the structure, required fields, and data types of the expected JSON output without relying on external libraries like Pydantic.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents='Give me information for the United States.',
    config=types.GenerateContentConfig(
        response_mime_type='application/json',
        response_schema={
            'required': [
                'name',
                'population',
                'capital',
                'continent',
                'gdp',
                'official_language',
                'total_area_sq_mi',
            ],
            'properties': {
                'name': {'type': 'STRING'},
                'population': {'type': 'INTEGER'},
                'capital': {'type': 'STRING'},
                'continent': {'type': 'STRING'},
                'gdp': {'type': 'INTEGER'},
                'official_language': {'type': 'STRING'},
                'total_area_sq_mi': {'type': 'INTEGER'},
            },
            'type': 'OBJECT',
        },
    ),
)
print(response.text)

```

----------------------------------------

TITLE: Send Asynchronous Non-Streaming Chat Messages
DESCRIPTION: Demonstrates how to send chat messages asynchronously without streaming. This approach uses `client.aio.chats.create` for an asynchronous chat session and `await chat.send_message` to send messages, suitable for non-blocking operations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
chat = client.aio.chats.create(model='gemini-2.0-flash-001')
response = await chat.send_message('tell me a story')
print(response.text)
```

----------------------------------------

TITLE: Configure Gen AI Client for Vertex AI with v1 API Version
DESCRIPTION: Initializes the Gen AI client for Vertex AI, explicitly setting the API version to 'v1' using 'http_options'. This ensures the client interacts with the stable API endpoints.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google import genai
from google.genai import types

client = genai.Client(
    vertexai=True,
    project='your-project-id',
    location='us-central1',
    http_options=types.HttpOptions(api_version='v1')
)
```

----------------------------------------

TITLE: Retrieve Cached Content by Name
DESCRIPTION: Shows how to retrieve previously created cached content using its name via the `client.caches.get` method.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
cached_content = client.caches.get(name=cached_content.name)
```

----------------------------------------

TITLE: Delete File from Google GenAI API
DESCRIPTION: Illustrates how to delete an uploaded file from the Google GenAI API using its `name` property via `client.files.delete`. This permanently removes the file from the API's storage.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
file3 = client.files.upload(file='2312.11805v3.pdf')

client.files.delete(name=file3.name)
```

----------------------------------------

TITLE: Copy Files for Google GenAI File Management
DESCRIPTION: Provides command-line examples using `gsutil cp` to copy PDF files from a Google Cloud Storage bucket to the local environment. These files are then ready for upload to the Gemini Developer API for file-based operations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: bash
CODE:
```
gsutil cp gs://cloud-samples-data/generative-ai/pdf/2312.11805v3.pdf .
gsutil cp gs://cloud-samples-data/generative-ai/pdf/2403.05530.pdf .
```

----------------------------------------

TITLE: Enable Automatic Function Calling with Python Functions
DESCRIPTION: Shows how to enable automatic function calling by passing a Python function directly as a tool to the GenAI model. The model can then automatically invoke this function based on the user's prompt and incorporate its return value into the response, simplifying tool usage.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

def get_current_weather(location: str) -> str:
    """Returns the current weather.

    Args:
      location: The city and state, e.g. San Francisco, CA
    """
    return 'sunny'

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents='What is the weather like in Boston?',
    config=types.GenerateContentConfig(
        tools=[get_current_weather],
    ),
)

print(response.text)
```

----------------------------------------

TITLE: Structure 'contents' Argument with 'types.Content' Instance
DESCRIPTION: Illustrates the canonical way to structure the 'contents' argument by explicitly creating a 'types.Content' instance with a role and parts, ensuring precise control over the input format.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google.genai import types

contents = types.Content(
role='user',
parts=[types.Part.from_text(text='Why is the sky blue?')]
)
```

----------------------------------------

TITLE: Configure Gen AI Client for Gemini Developer API with v1alpha Version
DESCRIPTION: Initializes the Gen AI client for the Gemini Developer API, explicitly setting the API version to 'v1alpha' using 'http_options'. This allows access to preview features.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google import genai
from google.genai import types

# Only run this block for Gemini Developer API
client = genai.Client(
    api_key='GEMINI_API_KEY',
    http_options=types.HttpOptions(api_version='v1alpha')
)
```

----------------------------------------

TITLE: Google GenAI Python API Type Definitions
DESCRIPTION: This section outlines the structure of key data types and their members found in the `genai.types` module of the Google GenAI Python library. It serves as a quick reference for understanding the available classes and their properties or enum values.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
class Modality:
  - AUDIO
  - IMAGE
  - MODALITY_UNSPECIFIED
  - TEXT

class ModalityTokenCount:
  - modality
  - token_count

class ModalityTokenCountDict:
  - modality
  - token_count

class Mode:
  - MODE_DYNAMIC
  - MODE_UNSPECIFIED

class Model:
  - checkpoints
  - default_checkpoint_id
  - description
  - display_name
  - endpoints
  - input_token_limit
  - labels
  - name
  - output_token_limit
  - supported_actions
  - tuned_model_info
  - version

class ModelContent:
  - parts
  - role

class ModelDict:
  - checkpoints
  - default_checkpoint_id
  - description
  - display_name
  - endpoints
  - input_token_limit
  - labels
  - name
  - output_token_limit
  - supported_actions
  - tuned_model_info
  - version

class ModelSelectionConfig:
  - feature_selection_preference

class ModelSelectionConfigDict:
  - feature_selection_preference

class MultiSpeakerVoiceConfig:
  - speaker_voice_configs

class MultiSpeakerVoiceConfigDict:
  - speaker_voice_configs

class Operation:
  - done
  - error
  - metadata
  - name

class OperationDict:
  - done
  - error
  - metadata
  - name

class Outcome:
  - OUTCOME_DEADLINE_EXCEEDED
  - OUTCOME_FAILED
```

----------------------------------------

TITLE: GenAI Python API Type Definitions Reference
DESCRIPTION: Comprehensive listing of data structures and enumerations used in the `genai` library, including their respective fields and values. This section details the `genai.types` module, providing a reference for configuring authentication, managing automatic activity detection, and handling batch jobs.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AuthConfigOauthConfigDict:
  access_token
  service_account

AuthConfigOidcConfig:
  id_token
  service_account

AuthConfigOidcConfigDict:
  id_token
  service_account

AuthToken:
  name

AuthTokenDict:
  name

AuthType:
  API_KEY_AUTH
  AUTH_TYPE_UNSPECIFIED
  GOOGLE_SERVICE_ACCOUNT_AUTH
  HTTP_BASIC_AUTH
  NO_AUTH
  OAUTH
  OIDC_AUTH

AutomaticActivityDetection:
  disabled
  end_of_speech_sensitivity
  prefix_padding_ms
  silence_duration_ms
  start_of_speech_sensitivity

AutomaticActivityDetectionDict:
  disabled
  end_of_speech_sensitivity
  prefix_padding_ms
  silence_duration_ms
  start_of_speech_sensitivity

AutomaticFunctionCallingConfig:
  disable
  ignore_call_history
  maximum_remote_calls

AutomaticFunctionCallingConfigDict:
  disable
  ignore_call_history
  maximum_remote_calls

BatchJob:
  create_time
  dest
  display_name
  end_time
  error
  model
  name
  src
  start_time
  state
  update_time
```

----------------------------------------

TITLE: Google GenAI Python API Type Definitions
DESCRIPTION: This section details the structure and properties of various configuration and response types used in the Google GenAI Python library. It includes definitions for authentication, batch job, cached content, and file handling configurations, as well as their corresponding dictionary representations and response objects.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CreateAuthTokenConfigDict:
  http_options
  live_connect_constraints
  lock_additional_fields
  new_session_expire_time
  uses
CreateAuthTokenParameters:
  config
CreateAuthTokenParametersDict:
  config
CreateBatchJobConfig:
  dest
  display_name
  http_options
CreateBatchJobConfigDict:
  dest
  display_name
  http_options
CreateCachedContentConfig:
  contents
  display_name
  expire_time
  http_options
  kms_key_name
  system_instruction
  tool_config
  tools
  ttl
CreateCachedContentConfigDict:
  contents
  display_name
  expire_time
  http_options
  kms_key_name
  system_instruction
  tool_config
  tools
  ttl
CreateFileConfig:
  http_options
  should_return_http_response
CreateFileConfigDict:
  http_options
  should_return_http_response
CreateFileResponse:
  sdk_http_response
CreateFileResponseDict:
  sdk_http_response
CreateTuningJobConfig:
```

----------------------------------------

TITLE: Google Cloud GenAI Python API Data Types and Structures
DESCRIPTION: Defines the various data structures and configuration dictionaries used across the Google Cloud GenAI Python library, including types for video generation, operation tracking, and generated media attributes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateVideosConfigDict:
  - last_frame
  - negative_prompt
  - number_of_videos
  - output_gcs_uri
  - person_generation
  - pubsub_topic
  - resolution
  - seed
GenerateVideosOperation:
  - done
  - error
  - metadata
  - name
  - response
  - result
GenerateVideosOperationDict:
  - done
  - error
  - metadata
  - name
  - response
  - result
GenerateVideosResponse:
  - generated_videos
  - rai_media_filtered_count
  - rai_media_filtered_reasons
GenerateVideosResponseDict:
  - generated_videos
  - rai_media_filtered_count
  - rai_media_filtered_reasons
GeneratedImage:
  - enhanced_prompt
  - image
  - rai_filtered_reason
  - safety_attributes
GeneratedImageDict:
  - enhanced_prompt
  - image
  - rai_filtered_reason
  - safety_attributes
GeneratedVideo:
  - video
GeneratedVideoDict:
  - video
GenerationConfig:
  - audio_timestamp
  - candidate_count
  - frequency_penalty
  - logprobs
  - max_output_tokens
```

----------------------------------------

TITLE: API Reference for genai.types Classes and Properties
DESCRIPTION: Comprehensive API documentation for data structures and configuration objects used in the Google Cloud Generative AI Python library, specifically focusing on usage metadata for content generation and various settings for image generation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateContentResponseUsageMetadata:
  prompt_token_count: property
  prompt_tokens_details: property
  thoughts_token_count: property
  tool_use_prompt_token_count: property
  tool_use_prompt_tokens_details: property
  total_token_count: property
  traffic_type: property

GenerateContentResponseUsageMetadataDict:
  cache_tokens_details: property
  cached_content_token_count: property
  candidates_token_count: property
  candidates_tokens_details: property
  prompt_token_count: property
  prompt_tokens_details: property
  thoughts_token_count: property
  tool_use_prompt_token_count: property
  tool_use_prompt_tokens_details: property
  total_token_count: property
  traffic_type: property

GenerateImagesConfig:
  add_watermark: property
  aspect_ratio: property
  enhance_prompt: property
  guidance_scale: property
  http_options: property
  include_rai_reason: property
  include_safety_attributes: property
  language: property
  negative_prompt: property
  number_of_images: property
  output_compression_quality: property
  output_gcs_uri: property
  output_mime_type: property
  person_generation: property
  safety_filter_level: property
  seed: property

GenerateImagesConfigDict:
  add_watermark: property
```

----------------------------------------

TITLE: Google Cloud Generative AI Python Library API Type Definitions
DESCRIPTION: This section details the various data structures and configuration objects used within the Google Cloud Generative AI Python library, specifically focusing on types related to listing batch jobs, cached contents, files, models, and tuning jobs, along with their dictionary representations. Each entry specifies a type and its associated members.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ListBatchJobsResponse:
  next_page_token

ListBatchJobsResponseDict:
  batch_jobs
  next_page_token

ListCachedContentsConfig:
  http_options
  page_size
  page_token

ListCachedContentsConfigDict:
  http_options
  page_size
  page_token

ListCachedContentsResponse:
  cached_contents
  next_page_token

ListCachedContentsResponseDict:
  cached_contents
  next_page_token

ListFilesConfig:
  http_options
  page_size
  page_token

ListFilesConfigDict:
  http_options
  page_size
  page_token

ListFilesResponse:
  files
  next_page_token

ListFilesResponseDict:
  files
  next_page_token

ListModelsConfig:
  filter
  http_options
  page_size
  page_token
  query_base

ListModelsConfigDict:
  filter
  http_options
  page_size
  page_token
  query_base

ListModelsResponse:
  models
  next_page_token

ListModelsResponseDict:
  models
  next_page_token

ListTuningJobsConfig:
  filter
```

----------------------------------------

TITLE: Google Generative AI Python Types Reference
DESCRIPTION: Detailed API documentation for the core data types and their properties available in the `genai.types` module of the Google Generative AI Python library. This includes structures for checkpoints, citations, code execution results, token computation, content representation, and embedding statistics.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CheckpointDict:
  checkpoint_id:
  epoch:
  step:
Citation:
  end_index:
  license:
  publication_date:
  start_index:
  title:
  uri:
CitationDict:
  end_index:
  license:
  publication_date:
  start_index:
  title:
  uri:
CitationMetadata:
  citations:
CitationMetadataDict:
  citations:
CodeExecutionResult:
  outcome:
  output:
CodeExecutionResultDict:
  outcome:
  output:
ComputeTokensConfig:
  http_options:
ComputeTokensConfigDict:
  http_options:
ComputeTokensResponse:
  tokens_info:
ComputeTokensResponseDict:
  tokens_info:
Content:
  parts:
  role:
ContentDict:
  parts:
  role:
ContentEmbedding:
  statistics:
  values:
ContentEmbeddingDict:
  statistics:
ContentEmbeddingStatistics:
  token_count:
  truncated:
ContentEmbeddingStatisticsDict:
  token_count:
  truncated:
ContextWindowCompressionConfig:
  sliding_window:
  trigger_tokens:
ContextWindowCompressionConfigDict:
  sliding_window:
  trigger_tokens:
```

----------------------------------------

TITLE: Disable Automatic Function Calling in Google GenAI
DESCRIPTION: This Python snippet demonstrates how to disable automatic function calling when using the 'ANY' tool configuration mode. By setting `automatic_function_calling.disable` to `True` within `GenerateContentConfig`, the SDK will not automatically invoke the provided tools, even if the model suggests a function call.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

def get_current_weather(location: str) -> str:
    """Returns the current weather.

    Args:
        location: The city and state, e.g. San Francisco, CA
    """
    return "sunny"

response = client.models.generate_content(
    model="gemini-2.0-flash-001",
    contents="What is the weather like in Boston?",
    config=types.GenerateContentConfig(
        tools=[get_current_weather],
        automatic_function_calling=types.AutomaticFunctionCallingConfig(
            disable=True
        ),
        tool_config=types.ToolConfig(
            function_calling_config=types.FunctionCallingConfig(mode='ANY')
        ),
    ),
)
```

----------------------------------------

TITLE: Manually Declare and Pass Function as Tool (Python)
DESCRIPTION: Explains how to manually define a function's schema using `google.genai.types.FunctionDeclaration` and `google.genai.types.Schema`. This declared function is then wrapped in a `types.Tool` object and passed to the model, which will return a function call part in the response for manual invocation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

function = types.FunctionDeclaration(
    name='get_current_weather',
    description='Get the current weather in a given location',
    parameters=types.Schema(
        type='OBJECT',
        properties={
            'location': types.Schema(
                type='STRING',
                description='The city and state, e.g. San Francisco, CA',
            ),
        },
        required=['location'],
    ),
)

tool = types.Tool(function_declarations=[function])

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents='What is the weather like in Boston?',
    config=types.GenerateContentConfig(
        tools=[tool],
    ),
)
print(response.function_calls[0])
```

----------------------------------------

TITLE: Generate Content Asynchronously (Non-Streaming)
DESCRIPTION: This example shows how to use the asynchronous version of `generate_content` via `client.aio.models.generate_content`. It awaits the full response before printing the generated text, suitable for non-streaming use cases.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
response = await client.aio.models.generate_content(
    model='gemini-2.0-flash-001', contents='Tell me a story in 300 words.'
)

print(response.text)
```

----------------------------------------

TITLE: Retrieve and Monitor Tuning Job Status
DESCRIPTION: Demonstrates how to retrieve the status of a tuning job using `client.tunings.get` and how to poll its state until it's no longer running, providing updates on its progress.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
tuning_job = client.tunings.get(name=tuning_job.name)
print(tuning_job)
```

LANGUAGE: python
CODE:
```
import time

running_states = set(
    [
        'JOB_STATE_PENDING',
        'JOB_STATE_RUNNING',
    ]
)

while tuning_job.state in running_states:
    print(tuning_job.state)
    tuning_job = client.tunings.get(name=tuning_job.name)
    time.sleep(10)
```

----------------------------------------

TITLE: Update Tuned Model Configuration (Python)
DESCRIPTION: Demonstrates how to update an existing tuned model's display name and description using the `client.models.update` method. The model object is typically retrieved from a list or pager.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
model = pager[0]

model = client.models.update(
    model=model.name,
    config=types.UpdateModelConfig(
        display_name='my tuned model', description='my tuned model description'
    ),
)

print(model)
```

----------------------------------------

TITLE: List Tuned Models Asynchronously
DESCRIPTION: Illustrates how to list tuned models asynchronously using `client.aio.models.list` with pagination and iteration. This is suitable for non-blocking operations in asynchronous applications.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
async for job in await client.aio.models.list(config={'page_size': 10, 'query_base': False}):
    print(job)
```

LANGUAGE: python
CODE:
```
async_pager = await client.aio.models.list(config={'page_size': 10, 'query_base': False})
print(async_pager.page_size)
print(async_pager[0])
await async_pager.next_page()
print(async_pager[0])
```

----------------------------------------

TITLE: Update Tuned Model Display Name and Description
DESCRIPTION: Updates the metadata (display name and description) of a tuned model using `client.models.update`. This helps in organizing and identifying models within your project.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

tuned_model = client.models.update(
    model=tuning_job.tuned_model.model,
    config=types.UpdateModelConfig(
        display_name='my tuned model', description='my tuned model description'
    ),
)
print(tuned_model)
```

----------------------------------------

TITLE: Initiate Model Fine-tuning Job
DESCRIPTION: Initiates a model fine-tuning job using `client.tunings.tune`. It takes a base model and a training dataset, along with configuration for epoch count and display name for the tuned model.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

tuning_job = client.tunings.tune(
    base_model=model,
    training_dataset=training_dataset,
    config=types.CreateTuningJobConfig(
        epoch_count=1, tuned_model_display_name='test_dataset_examples model'
    ),
)
print(tuning_job)
```

----------------------------------------

TITLE: List Tuned Models Synchronously
DESCRIPTION: Demonstrates how to list tuned models synchronously using `client.models.list` with pagination configuration. It shows iterating through models and accessing pager properties for sequential retrieval.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
for model in client.models.list(config={'page_size': 10, 'query_base': False}):
    print(model)
```

LANGUAGE: python
CODE:
```
pager = client.models.list(config={'page_size': 10, 'query_base': False})
print(pager.page_size)
print(pager[0])
pager.next_page()
print(pager[0])
```

----------------------------------------

TITLE: Stream Content with Image Input from Google Cloud Storage
DESCRIPTION: This example demonstrates how to include an image from Google Cloud Storage as part of the input for content generation. It uses `types.Part.from_uri` to reference the image and streams the model's text response.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

for chunk in client.models.generate_content_stream(
    model='gemini-2.0-flash-001',
    contents=[
        'What is this image about?',
        types.Part.from_uri(
            file_uri='gs://generativeai-downloads/images/scones.jpg',
            mime_type='image/jpeg',
        ),
    ],
):
    print(chunk.text, end='')
```

----------------------------------------

TITLE: Define and Convert Single Non-Function Call Part to UserContent (Python)
DESCRIPTION: Demonstrates creating a single content part from a URI (e.g., an image) using `types.Part.from_uri` and illustrates how the Google GenAI SDK converts this into a `types.UserContent` object with a 'user' role, suitable for user input.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google.genai import types

contents = types.Part.from_uri(
file_uri: 'gs://generativeai-downloads/images/scones.jpg',
mime_type: 'image/jpeg',
)
```

LANGUAGE: Python
CODE:
```
[
types.UserContent(parts=[
    types.Part.from_uri(
    file_uri: 'gs://generativeai-downloads/images/scones.jpg',
    mime_type: 'image/jpeg',
    )
])
]
```

----------------------------------------

TITLE: Configure Safety Settings for Content Generation (Python)
DESCRIPTION: Demonstrates how to apply safety settings to content generation requests using `google.genai.types.SafetySetting`. This allows specifying categories (e.g., HARM_CATEGORY_HATE_SPEECH) and thresholds (e.g., BLOCK_ONLY_HIGH) to control the type of content generated or blocked by the model.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents='Say something bad.',
    config=types.GenerateContentConfig(
        safety_settings=[
            types.SafetySetting(
                category='HARM_CATEGORY_HATE_SPEECH',
                threshold='BLOCK_ONLY_HIGH',
            )
        ]
    ),
)
print(response.text)
```

----------------------------------------

TITLE: TunedModelInfo Type Definition
DESCRIPTION: Provides information about a tuned model, such as its base model, creation, and update times.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TunedModelInfo:
  base_model
  create_time
  update_time
```

----------------------------------------

TITLE: SupervisedTuningSpec API Reference
DESCRIPTION: Specifies the configuration for a supervised tuning job, including options for exporting checkpoints, hyperparameters, and URIs for training and validation datasets.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedTuningSpec:
  export_last_checkpoint_only
  hyper_parameters
  training_dataset_uri
  validation_dataset_uri
```

----------------------------------------

TITLE: SupervisedTuningSpecDict API Reference
DESCRIPTION: Defines a dictionary-like structure for the configuration of a supervised tuning job, including options for exporting checkpoints and hyperparameters.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedTuningSpecDict:
  export_last_checkpoint_only
  hyper_parameters
```

----------------------------------------

TITLE: TunedModelDict Type Definition
DESCRIPTION: Dictionary representation of a tuned model, including its checkpoints, endpoint, and base model information.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TunedModelDict:
  checkpoints
  endpoint
  model
```

----------------------------------------

TITLE: TunedModel Type Definition
DESCRIPTION: Describes a tuned model, including its checkpoints, endpoint, and base model information.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TunedModel:
  checkpoints
  endpoint
  model
```

----------------------------------------

TITLE: Configure Model Generation with Advanced Typed Parameters (Python)
DESCRIPTION: Shows how to use `types.GenerateContentConfig` with a comprehensive set of parameters like `temperature`, `top_p`, `top_k`, `candidate_count`, `seed`, `max_output_tokens`, `stop_sequences`, `presence_penalty`, and `frequency_penalty` for fine-grained control over model response generation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google.genai import types

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents=types.Part.from_text(text='Why is the sky blue?'),
    config=types.GenerateContentConfig(
        temperature=0,
        top_p=0.95,
        top_k=20,
        candidate_count=1,
        seed=5,
        max_output_tokens=100,
        stop_sequences=['STOP!'],
        presence_penalty=0.0,
        frequency_penalty=0.0,
    ),
)

print(response.text)
```

----------------------------------------

TITLE: Stream Text Content Synchronously from Gemini Model
DESCRIPTION: This snippet shows how to stream text responses from the Gemini model. The `generate_content_stream` method returns chunks of text as they are generated, allowing for real-time display of the model's output.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
for chunk in client.models.generate_content_stream(
    model='gemini-2.0-flash-001', contents='Tell me a story in 300 words.'
):
    print(chunk.text, end='')
```

----------------------------------------

TITLE: Disable Automatic Function Calling for GenAI Models (Python)
DESCRIPTION: Illustrates how to explicitly disable automatic function calling when passing a Python function as a tool. By setting `automatic_function_calling.disable=True`, the model will return a list of function call parts in the response instead of directly invoking the function, allowing for manual handling.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents='What is the weather like in Boston?',
    config=types.GenerateContentConfig(
        tools=[get_current_weather],
        automatic_function_calling=types.AutomaticFunctionCallingConfig(
            disable=True
        ),
    ),
)
```

----------------------------------------

TITLE: API Definition: UpscaleImageParameters Type
DESCRIPTION: API definition for the UpscaleImageParameters type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UpscaleImageParameters
  .image
  .model
  .upscale_factor
```

----------------------------------------

TITLE: API Definition: UpscaleImageParametersDict Type
DESCRIPTION: API definition for the UpscaleImageParametersDict type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UpscaleImageParametersDict
  .config
  .image
  .model
  .upscale_factor
```

----------------------------------------

TITLE: Define SubjectReferenceImageDict Type (APIDOC)
DESCRIPTION: Documents the `SubjectReferenceImageDict` type, a dictionary representation of `SubjectReferenceImage`, detailing its `config`, `reference_id`, and `reference_image` properties.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SubjectReferenceImageDict:
  config
  reference_id
  reference_image
```

----------------------------------------

TITLE: Define SubjectReferenceConfig Type (APIDOC)
DESCRIPTION: Documents the `SubjectReferenceConfig` type, used for configuring subject references. It includes properties for `subject_description` and `subject_type`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SubjectReferenceConfig:
  subject_description
  subject_type
```

----------------------------------------

TITLE: Define StyleReferenceImageDict Type (APIDOC)
DESCRIPTION: Documents the `StyleReferenceImageDict` type, a dictionary representation of `StyleReferenceImage`, detailing its `config`, `reference_id`, `reference_image`, and `reference_type` properties.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
StyleReferenceImageDict:
  config
  reference_id
  reference_image
  reference_type
```

----------------------------------------

TITLE: SDK Conversion of 'types.Content' Instance for 'contents'
DESCRIPTION: Shows how the SDK internally converts a single 'types.Content' instance into a list containing that instance when used as the 'contents' argument.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
[
types.Content(
    role='user',
    parts=[types.Part.from_text(text='Why is the sky blue?')]
)
]
```

----------------------------------------

TITLE: Define StyleReferenceImage Type (APIDOC)
DESCRIPTION: Documents the `StyleReferenceImage` type, which specifies how to reference an image for style. It includes properties for `config`, `reference_id`, `reference_image`, `reference_type`, and `style_image_config`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
StyleReferenceImage:
  config
  reference_id
  reference_image
  reference_type
  style_image_config
```

----------------------------------------

TITLE: Generate Images with Google GenAI Python Client
DESCRIPTION: Demonstrates how to generate an image using the `client.models.generate_images` method. It specifies the model, a descriptive prompt, and configuration options like the number of images and output MIME type. The generated image is then displayed.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
response1 = client.models.generate_images(
    model='imagen-3.0-generate-002',
    prompt='An umbrella in the foreground, and a rainy night sky in the background',
    config=types.GenerateImagesConfig(
        number_of_images=1,
        include_rai_reason=True,
        output_mime_type='image/jpeg',
    ),
)
response1.generated_images[0].image.show()
```

----------------------------------------

TITLE: Generate Content with Uploaded File using Gemini API
DESCRIPTION: Demonstrates the process of uploading a local file using 'client.files.upload' and then incorporating the uploaded file into the 'contents' argument for 'client.models.generate_content' to summarize its content.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
file = client.files.upload(file='a11.txt')
response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents=['Could you summarize this file?', file]
)
print(response.text)
```

----------------------------------------

TITLE: Invoke Declared Function and Pass Response to Model (Python)
DESCRIPTION: Details the process of receiving a function call part from the model, extracting its arguments, invoking the corresponding Python function, and then passing the function's result back to the model. This allows for a multi-turn conversation where the model can use the function's output to generate a more informed response.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

user_prompt_content = types.Content(
    role='user',
    parts=[types.Part.from_text(text='What is the weather like in Boston?')],
)
function_call_part = response.function_calls[0]
function_call_content = response.candidates[0].content

try:
    function_result = get_current_weather(
        **function_call_part.function_call.args
    )
    function_response = {'result': function_result}
except (
    Exception
) as e:  # instead of raising the exception, you can let the model handle it
    function_response = {'error': str(e)}

function_response_part = types.Part.from_function_response(
    name=function_call_part.name,
    response=function_response,
)
function_response_content = types.Content(
    role='tool', parts=[function_response_part]
)

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents=[
        user_prompt_content,
        function_call_content,
        function_response_content,
    ],
    config=types.GenerateContentConfig(
        tools=[tool],
    ),
)

print(response.text)
```

----------------------------------------

TITLE: API Reference for MediaModality Enum
DESCRIPTION: Defines the enumeration for various media modalities supported, including audio, document, image, text, and video.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
MediaModality:
  AUDIO
  DOCUMENT
  IMAGE
  MODALITY_UNSPECIFIED
  TEXT
  VIDEO
```

----------------------------------------

TITLE: API Reference for genai.types.PartnerModelTuningSpecDict
DESCRIPTION: Documents the structure and members of the `PartnerModelTuningSpecDict` type within the `genai.types` module, likely a dictionary representation of `PartnerModelTuningSpec`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
PartnerModelTuningSpecDict:
  hyper_parameters
  training_dataset_uri
  validation_dataset_uri
```

----------------------------------------

TITLE: Define SlidingWindowDict Type (APIDOC)
DESCRIPTION: Documents the `SlidingWindowDict` type, which is likely a dictionary representation of the `SlidingWindow` configuration, including its `target_tokens` property.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SlidingWindowDict:
  target_tokens
```

----------------------------------------

TITLE: API Reference for genai.types.ProactivityConfig
DESCRIPTION: Documents the structure and members of the `ProactivityConfig` type within the `genai.types` module, configuring proactivity settings.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ProactivityConfig:
  proactive_audio
```

----------------------------------------

TITLE: API Reference for MediaResolution Enum
DESCRIPTION: Defines the enumeration for different media resolutions, such as high, low, and medium.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
MediaResolution:
  MEDIA_RESOLUTION_HIGH
  MEDIA_RESOLUTION_LOW
  MEDIA_RESOLUTION_MEDIUM
  MEDIA_RESOLUTION_UNSPECIFIED
```

----------------------------------------

TITLE: API Reference for ListBatchJobsResponse Type
DESCRIPTION: The response object returned when listing batch jobs. It contains a list of the batch jobs that match the query criteria.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ListBatchJobsResponse:
  batch_jobs
```

----------------------------------------

TITLE: LiveMusicClientMessage API Reference
DESCRIPTION: Defines a client message structure for LiveMusic, encompassing client content, music generation configuration, playback controls, and setup information.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicClientMessage:
  client_content
  music_generation_config
  playback_control
  setup
```

----------------------------------------

TITLE: API Reference for SubjectReferenceType
DESCRIPTION: Defines the SubjectReferenceType enum or class, specifying different categories of subjects that can be referenced.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SubjectReferenceType:
  SUBJECT_TYPE_ANIMAL
  SUBJECT_TYPE_DEFAULT
  SUBJECT_TYPE_PERSON
  SUBJECT_TYPE_PRODUCT
```

----------------------------------------

TITLE: API Reference for genai.types.PrebuiltVoiceConfig
DESCRIPTION: Documents the structure and members of the `PrebuiltVoiceConfig` type within the `genai.types` module, configuring options for prebuilt voices.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
PrebuiltVoiceConfig:
  voice_name
```

----------------------------------------

TITLE: API Definition for SafetySettingDict
DESCRIPTION: Defines the dictionary representation of `SafetySetting`. This type mirrors the `SafetySetting` class, providing a dictionary-based structure for configuring safety preferences, including `category`, `method`, and `threshold`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SafetySettingDict:
  category
  method
  threshold
```

----------------------------------------

TITLE: API Reference for MaskReferenceConfig Type
DESCRIPTION: Defines configuration parameters for mask references, including mask dilation, mode, and segmentation classes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
MaskReferenceConfig:
  mask_dilation
  mask_mode
  segmentation_classes
```

----------------------------------------

TITLE: LiveMusicConnectParameters API Reference
DESCRIPTION: Defines parameters for connecting to the LiveMusic service, primarily specifying the model.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicConnectParameters:
  model
```

----------------------------------------

TITLE: API Reference for MaskReferenceImage Type
DESCRIPTION: Defines the structure for an image used as a mask reference, including its configuration, image-specific mask config, reference ID, image data, and type.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
MaskReferenceImage:
  config
  mask_image_config
  reference_id
  reference_image
  reference_type
```

----------------------------------------

TITLE: Define SlidingWindow Type (APIDOC)
DESCRIPTION: Documents the `SlidingWindow` type, which likely represents a configuration for a sliding window mechanism, specifically detailing its `target_tokens` property.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SlidingWindow:
  target_tokens
```

----------------------------------------

TITLE: API Reference for genai.types.ProactivityConfigDict
DESCRIPTION: Documents the structure and members of the `ProactivityConfigDict` type within the `genai.types` module, likely a dictionary representation of `ProactivityConfig`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ProactivityConfigDict:
  proactive_audio
```

----------------------------------------

TITLE: AudioTranscriptionConfig Type Definition
DESCRIPTION: Represents the configuration settings for audio transcription processes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AudioTranscriptionConfig:
```

----------------------------------------

TITLE: API Reference for LiveMusicSetConfigParameters
DESCRIPTION: A type used to set configuration parameters for live music, likely without specific members detailed in this snippet.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicSetConfigParameters:
```

----------------------------------------

TITLE: API Reference for LiveMusicServerMessageDict
DESCRIPTION: Defines the dictionary-like structure for `LiveMusicServerMessage`, providing a mutable or serializable representation of server messages.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicServerMessageDict:
  - filtered_prompt
  - server_content
  - setup_complete
```

----------------------------------------

TITLE: FileStatus Type Definition
DESCRIPTION: Defines the structure for `FileStatus` within the `genai.types` module, typically used to convey status information including a code, details, and a message.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FileStatus:
  code
  details
  message
```

----------------------------------------

TITLE: API Reference for LiveMusicPlaybackControl
DESCRIPTION: Defines an enumeration of control commands for live music playback, such as pause, play, stop, and reset context.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicPlaybackControl:
  - PAUSE
  - PLAY
  - PLAYBACK_CONTROL_UNSPECIFIED
  - RESET_CONTEXT
  - STOP
```

----------------------------------------

TITLE: API Documentation for CachedContentUsageMetadata
DESCRIPTION: Defines the structure and members of the `CachedContentUsageMetadata` type within the `genai` library. This type captures usage statistics for cached content.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CachedContentUsageMetadata:
  audio_duration_seconds
  image_count
  text_count
  total_token_count
  video_duration_seconds
```

----------------------------------------

TITLE: AudioChunkDict Type Definition
DESCRIPTION: Represents the dictionary definition for the `AudioChunkDict` type, a dictionary representation of `AudioChunk`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AudioChunkDict:
  data
  mime_type
  source_metadata
```

----------------------------------------

TITLE: LiveConnectConfigDict API Reference
DESCRIPTION: Defines a dictionary of configuration options for the LiveConnect feature, including settings for audio transcription, proactivity, real-time input, response modalities, and model parameters like temperature and top-k/top-p sampling.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveConnectConfigDict:
  output_audio_transcription
  proactivity
  realtime_input_config
  response_modalities
  seed
  session_resumption
  speech_config
  system_instruction
  temperature
  tools
  top_k
  top_p
```

----------------------------------------

TITLE: API Reference for MaskReferenceConfigDict Type
DESCRIPTION: Defines the dictionary representation of mask reference configuration, including mask dilation, mode, and segmentation classes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
MaskReferenceConfigDict:
  mask_dilation
  mask_mode
  segmentation_classes
```

----------------------------------------

TITLE: GenAI Python Live Music and Real-time Input API Types
DESCRIPTION: This section details the various Python types (classes and their corresponding dictionary representations) used for configuring live music generation, setting weighted prompts, managing source metadata, sending real-time input, and handling server content within the `genai` library. Each type lists its available attributes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicSetConfigParameters:
  music_generation_config
LiveMusicSetConfigParametersDict:
  music_generation_config
LiveMusicSetWeightedPromptsParameters:
  weighted_prompts
LiveMusicSetWeightedPromptsParametersDict:
  weighted_prompts
LiveMusicSourceMetadata:
  client_content
  music_generation_config
LiveMusicSourceMetadataDict:
  client_content
  music_generation_config
LiveSendRealtimeInputParameters:
  activity_end
  activity_start
  audio
  audio_stream_end
  media
  text
  video
LiveSendRealtimeInputParametersDict:
  activity_end
  activity_start
  audio
  audio_stream_end
  media
  text
  video
LiveServerContent:
  generation_complete
  grounding_metadata
  input_transcription
  interrupted
  model_turn
  output_transcription
  turn_complete
  url_context_metadata
LiveServerContentDict:
  generation_complete
  grounding_metadata
  input_transcription
  interrupted
```

----------------------------------------

TITLE: API Reference for DeleteModelConfigDict Type
DESCRIPTION: Defines the dictionary-based configuration options for deleting a model, including HTTP options, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteModelConfigDict:
  - http_options
```

----------------------------------------

TITLE: API Reference for DeleteModelResponseDict Type
DESCRIPTION: Defines the dictionary-based response structure for a delete model operation within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteModelResponseDict:
```

----------------------------------------

TITLE: API Reference for LogprobsResultTopCandidates Type
DESCRIPTION: Defines the structure for a collection of top log probability candidates.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LogprobsResultTopCandidates:
  candidates
```

----------------------------------------

TITLE: FileDataDict Type Definition
DESCRIPTION: Defines the structure and attributes for the `FileDataDict` type within the `genai.types` module, typically used for representing file metadata.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FileDataDict:
  display_name
  file_uri
  mime_type
```

----------------------------------------

TITLE: API Documentation for CandidateDict
DESCRIPTION: Defines the structure and members of the `CandidateDict` type within the `genai` library. This dictionary-like type represents a generated candidate response from a model.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CandidateDict:
  avg_logprobs
  citation_metadata
  content
  finish_message
  finish_reason
  grounding_metadata
  index
  logprobs_result
  safety_ratings
  token_count
  url_context_metadata
```

----------------------------------------

TITLE: DistillationDataStatsDict API Reference
DESCRIPTION: API documentation for the `DistillationDataStatsDict` type, detailing its attributes related to distillation data statistics within the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DistillationDataStatsDict:
  training_dataset_stats
```

----------------------------------------

TITLE: API Reference for ListBatchJobsConfigDict Type
DESCRIPTION: A dictionary representation of the configuration for listing batch jobs. This type is used to provide request parameters in a dictionary format.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ListBatchJobsConfigDict:
  filter
  http_options
  page_size
  page_token
```

----------------------------------------

TITLE: API Reference for DeleteFileConfigDict Type
DESCRIPTION: Defines the dictionary-based configuration options for deleting a file, including HTTP options, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteFileConfigDict:
  - http_options
```

----------------------------------------

TITLE: LiveClientToolResponseDict API Reference
DESCRIPTION: Represents a dictionary-based structure for tool responses in a live client interaction, mirroring the LiveClientToolResponse class.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveClientToolResponseDict:
  - function_responses
```

----------------------------------------

TITLE: API Definition for Schema
DESCRIPTION: Defines the structure and attributes of the `Schema` type. This class represents a data schema, including properties like `additional_properties`, `any_of`, `default`, `defs`, `description`, `enum`, `example`, `format`, and `items` for validation and definition.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Schema:
  additional_properties
  any_of
  default
  defs
  description
  enum
  example
  format
  items
```

----------------------------------------

TITLE: LiveClientToolResponse API Reference
DESCRIPTION: Defines the structure for responses received from tools in a live client interaction, specifically containing function responses.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveClientToolResponse:
  - function_responses
```

----------------------------------------

TITLE: API Documentation for CancelBatchJobConfig
DESCRIPTION: Defines the structure and members of the `CancelBatchJobConfig` type within the `genai` library. This type specifies configuration options for canceling a batch job.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CancelBatchJobConfig:
  http_options
```

----------------------------------------

TITLE: API Reference for LiveMusicFilteredPromptDict
DESCRIPTION: Defines the structure and members for the `LiveMusicFilteredPromptDict` type, typically used to represent a filtered prompt in live music generation contexts, including the reason for filtering and the prompt text.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicFilteredPromptDict:
  - filtered_reason
  - text
```

----------------------------------------

TITLE: API Reference for ListBatchJobsConfig Type
DESCRIPTION: Configuration options for listing batch jobs. It allows filtering, pagination, and specifying HTTP options for the request.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ListBatchJobsConfig:
  filter
  http_options
  page_size
  page_token
```

----------------------------------------

TITLE: API Reference for LiveMusicGenerationConfigDict
DESCRIPTION: Defines the dictionary-like structure for `LiveMusicGenerationConfig`, providing a mutable or serializable representation of the live music generation parameters.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicGenerationConfigDict:
  - bpm
  - brightness
  - density
  - guidance
  - mute_bass
  - mute_drums
  - only_bass_and_drums
  - scale
  - seed
  - temperature
  - top_k
```

----------------------------------------

TITLE: API Definition for SafetySetting
DESCRIPTION: Defines the structure and attributes of the `SafetySetting` type. This class is used to configure safety preferences, specifying a `category`, the `method` of enforcement, and a `threshold` for filtering content.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SafetySetting:
  category
  method
  threshold
```

----------------------------------------

TITLE: API Reference for EmbedContentConfig Type
DESCRIPTION: Outlines the configuration parameters for embedding content. This type includes settings for automatic truncation, HTTP options, MIME type of the content, desired output dimensionality, task type for the embedding, and an optional title for the content.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
EmbedContentConfig:
  - auto_truncate
  - http_options
  - mime_type
  - output_dimensionality
  - task_type
  - title
```

----------------------------------------

TITLE: AudioTranscriptionConfigDict Type Definition
DESCRIPTION: Represents the dictionary definition for the `AudioTranscriptionConfigDict` type, a dictionary representation of `AudioTranscriptionConfig`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AudioTranscriptionConfigDict:
```

----------------------------------------

TITLE: API Reference for genai.types.Outcome
DESCRIPTION: Documents the structure and members of the `Outcome` type within the `genai.types` module, representing possible outcomes of an operation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Outcome:
  OUTCOME_OK
  OUTCOME_UNSPECIFIED
```

----------------------------------------

TITLE: FunctionCallingConfigMode Type Definition
DESCRIPTION: Defines the `FunctionCallingConfigMode` type within the `genai.types` module, which specifies how function calls are handled.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FunctionCallingConfigMode:
```

----------------------------------------

TITLE: API Reference for GroundingChunkRetrievedContext Type
DESCRIPTION: Defines the structure and members of the `GroundingChunkRetrievedContext` type within the `genai.types` module, detailing components of retrieved context like text, title, and URI.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingChunkRetrievedContext:
  rag_chunk
  text
  title
  uri
```

----------------------------------------

TITLE: GroundingSupport Type Definition
DESCRIPTION: Defines the `GroundingSupport` type and its associated members, used for managing grounding information in generative AI responses.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingSupport:
  segment
```

----------------------------------------

TITLE: FinishReason Enum Definition
DESCRIPTION: Defines the possible reasons for a model's generation to stop within the `genai.types` module, including various safety and token limits.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FinishReason:
  BLOCKLIST
  FINISH_REASON_UNSPECIFIED
  IMAGE_SAFETY
  LANGUAGE
  MALFORMED_FUNCTION_CALL
  MAX_TOKENS
  OTHER
  PROHIBITED_CONTENT
  RECITATION
  SAFETY
  SPII
  STOP
  UNEXPECTED_TOOL_CALL
```

----------------------------------------

TITLE: API Reference for LatLng Type
DESCRIPTION: Represents a geographical point with latitude and longitude coordinates. This type is used for specifying locations in various API calls.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LatLng:
  latitude
  longitude
```

----------------------------------------

TITLE: API Reference for GroundingSupport Type
DESCRIPTION: Defines the structure and members of the `GroundingSupport` type within the `genai.types` module, specifying confidence scores and chunk indices for grounding support.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingSupport:
  confidence_scores
  grounding_chunk_indices
```

----------------------------------------

TITLE: API Reference for LogprobsResultCandidateDict Type
DESCRIPTION: Defines the dictionary representation of the `LogprobsResultCandidate` type, including its log probability, token, and token ID members.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LogprobsResultCandidateDict:
  log_probability
  token
  token_id
```

----------------------------------------

TITLE: List and Page Through Tuning Jobs (Python)
DESCRIPTION: Illustrates various methods to list tuning jobs, including simple iteration, using pagers for synchronous and asynchronous operations, and navigating through pages of results. This allows for efficient retrieval of large numbers of job entries.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
for job in client.tunings.list(config={'page_size': 10}):
    print(job)
```

LANGUAGE: Python
CODE:
```
pager = client.tunings.list(config={'page_size': 10})
print(pager.page_size)
print(pager[0])
pager.next_page()
print(pager[0])
```

LANGUAGE: Python
CODE:
```
async for job in await client.aio.tunings.list(config={'page_size': 10}):
    print(job)
```

LANGUAGE: Python
CODE:
```
async_pager = await client.aio.tunings.list(config={'page_size': 10})
print(async_pager.page_size)
print(async_pager[0])
await async_pager.next_page()
print(async_pager[0])
```

----------------------------------------

TITLE: Upload File to Google GenAI API
DESCRIPTION: Demonstrates how to upload local files to the Google GenAI API using `client.files.upload`. This operation returns a file object containing metadata about the uploaded file, which can then be used for other API calls. File management is currently supported only in Gemini Developer API.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
file1 = client.files.upload(file='2312.11805v3.pdf')
file2 = client.files.upload(file='2403.05530.pdf')

print(file1)
print(file2)
```

----------------------------------------

TITLE: Define and Convert Function Call Parts to ModelContent (Python)
DESCRIPTION: Illustrates how to define a list of function call parts using `types.Part.from_function_call` and shows how the Google GenAI SDK automatically converts these into a `types.ModelContent` object with a 'model' role, suitable for model interaction.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google.genai import types

contents = [
types.Part.from_function_call(
    name='get_weather_by_location',
    args={'location': 'Boston'}
),
types.Part.from_function_call(
    name='get_weather_by_location',
    args={'location': 'New York'}
),
]
```

LANGUAGE: Python
CODE:
```
[
types.ModelContent(
    parts=[
    types.Part.from_function_call(
        name='get_weather_by_location',
        args={'location': 'Boston'}
    ),
    types.Part.from_function_call(
        name='get_weather_by_location',
        args={'location': 'New York'}
    )
    ]
)
]
```

----------------------------------------

TITLE: API Definition: UrlContextMetadataDict Type
DESCRIPTION: API definition for the UrlContextMetadataDict type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UrlContextMetadataDict
  .url_metadata
```

----------------------------------------

TITLE: Delete Batch Prediction Job (Python)
DESCRIPTION: Illustrates how to delete a specific batch prediction job resource using the `client.batches.delete` method and the job's name. This permanently removes the job and its associated resources.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
# Delete the job resource
delete_job = client.batches.delete(name=job.name)

delete_job
```

----------------------------------------

TITLE: API Definition: UrlMetadataDict Type
DESCRIPTION: API definition for the UrlMetadataDict type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UrlMetadataDict
  .retrieved_url
  .url_retrieval_status
```

----------------------------------------

TITLE: AuthConfigHttpBasicAuthConfigDict Type Definition
DESCRIPTION: Represents the dictionary definition for the `AuthConfigHttpBasicAuthConfigDict` type, a dictionary representation of `AuthConfigHttpBasicAuthConfig`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AuthConfigHttpBasicAuthConfigDict:
  credential_secret
```

----------------------------------------

TITLE: genai.batches Module API Reference
DESCRIPTION: API documentation for the `genai.batches` module, covering `AsyncBatches` and `Batches` classes and their methods for managing batch operations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
genai.batches module:
  AsyncBatches:
    cancel()
    create()
    delete()
    get()
    list()
  Batches:
    cancel()
    create()
    delete()
    get()
    list()
```

----------------------------------------

TITLE: AuthConfigOauthConfig Type Definition
DESCRIPTION: Represents the configuration for OAuth authentication, including access token and service account details.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AuthConfigOauthConfig:
  access_token
  service_account
```

----------------------------------------

TITLE: ApiKeyConfig Type Definition
DESCRIPTION: Represents the configuration for an API key, containing the API key string itself.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ApiKeyConfig:
  api_key_string
```

----------------------------------------

TITLE: Get File Information from Google GenAI API
DESCRIPTION: Shows how to retrieve metadata for an uploaded file from the Google GenAI API using its `name` property via `client.files.get`. This allows verification of file status and details after upload.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
file1 = client.files.upload(file='2312.11805v3.pdf')
file_info = client.files.get(name=file1.name)
```

----------------------------------------

TITLE: Count Tokens in Text Content
DESCRIPTION: This example shows how to use `client.models.count_tokens` to determine the number of tokens in a given text input. This is useful for managing API costs and understanding model input limits.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
response = client.models.count_tokens(
    model='gemini-2.0-flash-001',
    contents='why is the sky blue?',
)
print(response)
```

----------------------------------------

TITLE: Generate Content with a Fine-tuned Model
DESCRIPTION: Shows how to use the endpoint of a fine-tuned model to generate content via `client.models.generate_content`. This allows leveraging the specialized capabilities of the tuned model.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
response = client.models.generate_content(
    model=tuning_job.tuned_model.endpoint,
    contents='why is the sky blue?',
)

print(response.text)
```

----------------------------------------

TITLE: API Documentation for Checkpoint
DESCRIPTION: Defines the structure and members of the `Checkpoint` type within the `genai` library. This type represents a training checkpoint.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Checkpoint:
  checkpoint_id
  epoch
  step
```

----------------------------------------

TITLE: GetOperationConfigDict API Reference
DESCRIPTION: Defines the structure and properties for the `GetOperationConfigDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetOperationConfigDict:
  http_options: Property of GetOperationConfigDict.
```

----------------------------------------

TITLE: Retrieve Details of a Tuned Model
DESCRIPTION: Retrieves the details of a specific tuned model using `client.models.get` by providing its model identifier. This allows inspecting the model's properties and status.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
tuned_model = client.models.get(model=tuning_job.tuned_model.model)
print(tuned_model)
```

----------------------------------------

TITLE: Configure Model Generation with System Instructions (Python)
DESCRIPTION: Demonstrates how to use `types.GenerateContentConfig` to influence model behavior, including setting a `system_instruction`, limiting `max_output_tokens`, and adjusting `temperature` for determinism when calling `client.models.generate_content`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google.genai import types

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents='high',
    config=types.GenerateContentConfig(
        system_instruction='I say high, you say low',
        max_output_tokens=3,
        temperature=0.3,
    ),
)
print(response.text)
```

----------------------------------------

TITLE: Prepare Tuning Dataset for Model Fine-tuning
DESCRIPTION: Prepares a `TuningDataset` for model fine-tuning. It shows conditional logic for Vertex AI (GCS URI) and Gemini Developer API (inline examples) to define the training data.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

if client.vertexai:
    model = 'gemini-2.0-flash-001'
    training_dataset = types.TuningDataset(
        gcs_uri='gs://cloud-samples-data/ai-platform/generative_ai/gemini-1_5/text/sft_train_data.jsonl',
    )
else:
    model = 'models/gemini-2.0-flash-001'
    training_dataset = types.TuningDataset(
        examples=[
            types.TuningExample(
                text_input=f'Input text {i}',
                output=f'Output text {i}',
            )
            for i in range(5)
        ],
    )
```

----------------------------------------

TITLE: GenerateContentResponse Class Definition
DESCRIPTION: Defines the structure of the response object returned by content generation operations in the `genai` library, including various fields related to candidates, timing, model version, and detailed metadata like prompt feedback and usage information.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateContentResponse:
  automatic_function_calling_history
  candidates
  create_time
  model_version
  parsed
  prompt_feedback
  response_id
  sdk_http_response
  usage_metadata
  code_execution_result
  executable_code
  function_calls
  text
```

----------------------------------------

TITLE: Define Enum Response Schema for Text Output in Google GenAI
DESCRIPTION: This snippet demonstrates how to constrain the model's text output to a predefined set of values using a Python `Enum`. By setting `response_mime_type` to 'text/x.enum' and providing an `Enum` class as `response_schema`, the model will return one of the enum's values.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from enum import Enum

class InstrumentEnum(Enum):
    PERCUSSION = 'Percussion'
    STRING = 'String'
    WOODWIND = 'Woodwind'
    BRASS = 'Brass'
    KEYBOARD = 'Keyboard'

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents='What instrument plays multiple notes at once?',
    config={
        'response_mime_type': 'text/x.enum',
        'response_schema': InstrumentEnum,
    },
)
print(response.text)

```

----------------------------------------

TITLE: Create Batch Prediction Job (Python)
DESCRIPTION: Shows how to create a new batch prediction job by specifying the model name and source data URI. The destination and job display name are automatically populated by the client if not explicitly provided.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
# Specify model and source file only, destination and job display name will be auto-populated
job = client.batches.create(
    model='gemini-2.0-flash-001',
    src='bq://my-project.my-dataset.my-table',
)

job
```

----------------------------------------

TITLE: SDK Conversion of Function Call Part for 'contents' Argument
DESCRIPTION: Shows how the SDK converts a function call part into a 'types.ModelContent' object, automatically setting the role to 'model' and embedding the function call within its parts.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
[
types.ModelContent(
    parts=[
    types.Part.from_function_call(
        name='get_weather_by_location',
        args={'location': 'Boston'}
    )
    ]
)
]
```

----------------------------------------

TITLE: Stream Content with Image Input from Local File System
DESCRIPTION: This snippet illustrates how to provide a local image file as input for content generation. It reads the image into bytes and uses `types.Part.from_bytes` to create a part object, then streams the model's text response.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

YOUR_IMAGE_PATH = 'your_image_path'
YOUR_IMAGE_MIME_TYPE = 'your_image_mime_type'
with open(YOUR_IMAGE_PATH, 'rb') as f:
    image_bytes = f.read()

for chunk in client.models.generate_content_stream(
    model='gemini-2.0-flash-001',
    contents=[
        'What is this image about?',
        types.Part.from_bytes(data=image_bytes, mime_type=YOUR_IMAGE_MIME_TYPE),
    ],
):
    print(chunk.text, end='')
```

----------------------------------------

TITLE: Retrieve and Monitor Batch Prediction Job Status (Python)
DESCRIPTION: Demonstrates how to retrieve a batch prediction job by its name and continuously poll its state until it reaches a completed status (succeeded, failed, cancelled, or paused). This is crucial for long-running batch operations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
# Get a job by name
job = client.batches.get(name=job.name)

job.state
```

LANGUAGE: Python
CODE:
```
completed_states = set(
    [
        'JOB_STATE_SUCCEEDED',
        'JOB_STATE_FAILED',
        'JOB_STATE_CANCELLED',
        'JOB_STATE_PAUSED',
    ]
)

while job.state not in completed_states:
    print(job.state)
    job = client.batches.get(name=job.name)
    time.sleep(30)

job
```

----------------------------------------

TITLE: SDK Conversion of String for 'contents' Argument
DESCRIPTION: Explains how the SDK converts a plain string input into a 'types.UserContent' object, setting the role to 'user' and encapsulating the string as a text part.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
[
types.UserContent(
    parts=[
    types.Part.from_text(text='Why is the sky blue?')
    ]
)
]
```

----------------------------------------

TITLE: Edit Image with Google GenAI Python Client
DESCRIPTION: Illustrates how to edit an image using `client.models.edit_image`. This process involves defining raw and masked reference images, providing a new prompt, and configuring the edit mode (e.g., 'EDIT_MODE_INPAINT_INSERTION'), number of images, and output details. Image editing uses a separate model and is currently supported only in Vertex AI.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
# Edit the generated image from above
from google.genai import types
from google.genai.types import RawReferenceImage, MaskReferenceImage

raw_ref_image = RawReferenceImage(
    reference_id=1,
    reference_image=response1.generated_images[0].image,
)

# Model computes a mask of the background
mask_ref_image = MaskReferenceImage(
    reference_id=2,
    config=types.MaskReferenceConfig(
        mask_mode='MASK_MODE_BACKGROUND',
        mask_dilation=0,
    ),
)

response3 = client.models.edit_image(
    model='imagen-3.0-capability-001',
    prompt='Sunlight and clear sky',
    reference_images=[raw_ref_image, mask_ref_image],
    config=types.EditImageConfig(
        edit_mode='EDIT_MODE_INPAINT_INSERTION',
        number_of_images=1,
        include_rai_reason=True,
        output_mime_type='image/jpeg',
    ),
)
response3.generated_images[0].image.show()
```

----------------------------------------

TITLE: Handle API Errors (Python)
DESCRIPTION: Demonstrates how to catch `errors.APIError` exceptions raised by the GenAI SDK. The example shows accessing the error code and message for robust error handling and debugging purposes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
try:
    client.models.generate_content(
        model="invalid-model-name",
        contents="What is your name?",
    )
except errors.APIError as e:
    print(e.code) # 404
    print(e.message)
```

----------------------------------------

TITLE: API Reference for genai.types.GenerationConfigDict
DESCRIPTION: Represents a dictionary-based configuration for generative model parameters, mirroring the attributes of `GenerationConfig`. This type is typically used for passing configuration data as a plain dictionary, offering flexibility in how generation settings are provided.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
class GenerationConfigDict:
  audio_timestamp: Optional[str]
  candidate_count: Optional[int]
  frequency_penalty: Optional[float]
  logprobs: Optional[bool]
  max_output_tokens: Optional[int]
  media_resolution: Optional[str]
  model_selection_config: Optional[dict]
  presence_penalty: Optional[float]
  response_json_schema: Optional[dict]
  response_logprobs: Optional[bool]
  response_mime_type: Optional[str]
  response_modalities: Optional[list[str]]
  response_schema: Optional[dict]
  routing_config: Optional[GenerationConfigRoutingConfigDict]
  seed: Optional[int]
  speech_config: Optional[dict]
  stop_sequences: Optional[list[str]]
  temperature: Optional[float]
  thinking_config: Optional[dict]
  top_k: Optional[int]
  top_p: Optional[float]
```

----------------------------------------

TITLE: Generate Videos with Google GenAI Python Client
DESCRIPTION: Demonstrates how to generate videos asynchronously using `client.models.generate_videos`. It shows the process of creating an operation, polling its status until completion, and then displaying the generated video. Video generation support is behind an allowlist for Vertex and Gemini Developer API.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

# Create operation
operation = client.models.generate_videos(
    model='veo-2.0-generate-001',
    prompt='A neon hologram of a cat driving at top speed',
    config=types.GenerateVideosConfig(
        number_of_videos=1,
        fps=24,
        duration_seconds=5,
        enhance_prompt=True,
    ),
)

# Poll operation
while not operation.done:
    time.sleep(20)
    operation = client.operations.get(operation)

video = operation.result.generated_videos[0].video
video.show()
```

----------------------------------------

TITLE: List Base Models Synchronously (Python)
DESCRIPTION: Demonstrates synchronously listing available base models using `client.models.list()` and handling pagination with the returned pager object to retrieve models in chunks.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
for model in client.models.list():
    print(model)
```

LANGUAGE: Python
CODE:
```
pager = client.models.list(config={'page_size': 10})
print(pager.page_size)
print(pager[0])
pager.next_page()
print(pager[0])
```

----------------------------------------

TITLE: API Reference for genai.types.GenerationConfig
DESCRIPTION: Defines the core configuration parameters for controlling the behavior of generative model responses. These settings influence aspects like output format, token limits, and safety settings, providing fine-grained control over the generation process.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
class GenerationConfig:
  media_resolution: Optional[str]
  model_selection_config: Optional[dict]
  presence_penalty: Optional[float]
  response_json_schema: Optional[dict]
  response_logprobs: Optional[bool]
  response_mime_type: Optional[str]
  response_modalities: Optional[list[str]]
  response_schema: Optional[dict]
  routing_config: Optional[GenerationConfigRoutingConfig]
  seed: Optional[int]
  speech_config: Optional[dict]
  stop_sequences: Optional[list[str]]
  temperature: Optional[float]
  thinking_config: Optional[dict]
  top_k: Optional[int]
  top_p: Optional[float]
```

----------------------------------------

TITLE: Generate Content Using Cached Data
DESCRIPTION: Illustrates how to use cached content when generating new content with `client.models.generate_content`. It demonstrates passing the cached content's name in the `GenerateContentConfig`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents='Summarize the pdfs',
    config=types.GenerateContentConfig(
        cached_content=cached_content.name,
    ),
)
print(response.text)
```

----------------------------------------

TITLE: Create Cached Content with Google GenAI Python Client
DESCRIPTION: Demonstrates how to create cached content using the `client.caches.create` method. It shows how to handle file URIs for Vertex AI and other environments, and how to configure the cached content with PDF parts, system instructions, display name, and TTL.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

if client.vertexai:
    file_uris = [
        'gs://cloud-samples-data/generative-ai/pdf/2312.11805v3.pdf',
        'gs://cloud-samples-data/generative-ai/pdf/2403.05530.pdf',
    ]
else:
    file_uris = [file1.uri, file2.uri]

cached_content = client.caches.create(
    model='gemini-2.0-flash-001',
    config=types.CreateCachedContentConfig(
        contents=[
            types.Content(
                role='user',
                parts=[
                    types.Part.from_uri(
                        file_uri=file_uris[0], mime_type='application/pdf'
                    ),
                    types.Part.from_uri(
                        file_uri=file_uris[1],
                        mime_type='application/pdf',
                    ),
                ],
            )
        ],
        system_instruction='What is the sum of the two pdfs?',
        display_name='test cache',
        ttl='3600s',
    ),
)
```

----------------------------------------

TITLE: genai.types Module API Definitions
DESCRIPTION: Defines various data structures, configurations, and response objects used within the Google Cloud Generative AI Python library, specifically within the `genai.types` module. This includes types for listing tuning jobs, handling live client content, messages, and real-time input, along with their corresponding dictionary representations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ListTuningJobsConfig:
  http_options:
  page_size:
  page_token:
ListTuningJobsConfigDict:
  filter:
  http_options:
  page_size:
  page_token:
ListTuningJobsResponse:
  next_page_token:
  tuning_jobs:
ListTuningJobsResponseDict:
  next_page_token:
  tuning_jobs:
LiveClientContent:
  turn_complete:
  turns:
LiveClientContentDict:
  turn_complete:
  turns:
LiveClientMessage:
  client_content:
  realtime_input:
  setup:
  tool_response:
LiveClientMessageDict:
  client_content:
  realtime_input:
  setup:
  tool_response:
LiveClientRealtimeInput:
  activity_end:
  activity_start:
  audio:
  audio_stream_end:
  media_chunks:
  text:
  video:
LiveClientRealtimeInputDict:
  activity_end:
  activity_start:
  audio:
  audio_stream_end:
  media_chunks:
  text:
  video:
LiveClientSetup:
  context_window_compression:
  generation_config:
  input_audio_transcription:
```

----------------------------------------

TITLE: Embed Multiple Text Contents with Output Configuration
DESCRIPTION: This example demonstrates embedding multiple text strings simultaneously. It also shows how to use `types.EmbedContentConfig` to specify parameters like `output_dimensionality` for the generated embeddings.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

# multiple contents with config
response = client.models.embed_content(
    model='text-embedding-004',
    contents=['why is the sky blue?', 'What is your age?'],
    config=types.EmbedContentConfig(output_dimensionality=10),
)

print(response)
```

----------------------------------------

TITLE: Define and Convert List of Non-Function Call Parts to UserContent (Python)
DESCRIPTION: Illustrates defining a list of mixed non-function call parts (text and URI) and how the Google GenAI SDK converts this list into a single `types.UserContent` object with a 'user' role, representing a multi-part user input.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google.genai import types

contents = [
types.Part.from_text('What is this image about?'),
types.Part.from_uri(
    file_uri: 'gs://generativeai-downloads/images/scones.jpg',
    mime_type: 'image/jpeg',
)
]
```

LANGUAGE: Python
CODE:
```
[
types.UserContent(
    parts=[
    types.Part.from_text('What is this image about?'),
    types.Part.from_uri(
        file_uri: 'gs://generativeai-downloads/images/scones.jpg',
        mime_type: 'image/jpeg',
    )
    ]
)
]
```

----------------------------------------

TITLE: Python Generative AI Library Type Definitions API
DESCRIPTION: This section outlines the structure and members of key type definitions and classes available in the `genai.types` module. It includes details on data structures for tracking usage, representing user content, configuring Vertex AI search, managing Retrieval-Augmented Generation (RAG) stores, and handling video objects, along with their respective properties and methods.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UsageMetadataDict:
  - total_token_count (property)
  - traffic_type (property)
UserContent:
  - parts (property)
  - role (property)
VertexAISearch:
  - data_store_specs (property)
  - datastore (property)
  - engine (property)
  - filter (property)
  - max_results (property)
VertexAISearchDataStoreSpec:
  - data_store (property)
  - filter (property)
VertexAISearchDataStoreSpecDict:
  - data_store (property)
  - filter (property)
VertexAISearchDict:
  - data_store_specs (property)
  - datastore (property)
  - engine (property)
  - filter (property)
  - max_results (property)
VertexRagStore:
  - rag_corpora (property)
  - rag_resources (property)
  - rag_retrieval_config (property)
  - similarity_top_k (property)
  - store_context (property)
  - vector_distance_threshold (property)
VertexRagStoreDict:
  - rag_corpora (property)
  - rag_resources (property)
  - rag_retrieval_config (property)
  - similarity_top_k (property)
  - store_context (property)
  - vector_distance_threshold (property)
VertexRagStoreRagResource:
  - rag_corpus (property)
  - rag_file_ids (property)
VertexRagStoreRagResourceDict:
  - rag_corpus (property)
  - rag_file_ids (property)
Video:
  - mime_type (property)
  - uri (property)
  - video_bytes (property)
  - from_file() (method)
  - save() (method)
  - show() (method)
VideoCompressionQuality:
  - LOSSLESS (enum_member)
  - OPTIMIZED (enum_member)
VideoDict:
  - mime_type (property)
  - uri (property)
```

----------------------------------------

TITLE: Count Tokens Asynchronously
DESCRIPTION: This example illustrates the asynchronous version of the `count_tokens` method. It uses `await client.aio.models.count_tokens` to get the token count without blocking the execution thread.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
response = await client.aio.models.count_tokens(
    model='gemini-2.0-flash-001',
    contents='why is the sky blue?',
)
print(response)
```

----------------------------------------

TITLE: Google Cloud Python GenAI Library: `genai.types` API Reference
DESCRIPTION: Detailed API documentation for data types and structures within the `genai.types` module of the Google Cloud Python GenAI library, including their properties and nested types. This section covers classes, enums, and dictionaries, listing their available attributes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
EmbedContentMetadata:
  - billable_character_count
EmbedContentMetadataDict:
  - billable_character_count
EmbedContentResponse:
  - embeddings
  - metadata
EmbedContentResponseDict:
  - embeddings
  - metadata
EncryptionSpec:
  - kms_key_name
EncryptionSpecDict:
  - kms_key_name
EndSensitivity:
  - END_SENSITIVITY_HIGH
  - END_SENSITIVITY_LOW
  - END_SENSITIVITY_UNSPECIFIED
Endpoint:
  - deployed_model_id
  - name
EndpointDict:
  - deployed_model_id
  - name
EnterpriseWebSearch:
EnterpriseWebSearchDict:
ExecutableCode:
  - code
  - language
ExecutableCodeDict:
  - code
  - language
FeatureSelectionPreference:
  - BALANCED
  - FEATURE_SELECTION_PREFERENCE_UNSPECIFIED
  - PRIORITIZE_COST
  - PRIORITIZE_QUALITY
FetchPredictOperationConfig:
  - http_options
FetchPredictOperationConfigDict:
  - http_options
File:
  - create_time
  - display_name
  - download_uri
  - error
  - expiration_time
  - mime_type
  - name
  - sha256_hash
  - size_bytes
  - source
  - state
  - update_time
  - uri
  - video_metadata
FileData:
  - display_name
  - file_uri
  - mime_type
```

----------------------------------------

TITLE: Google Cloud Generative AI Python API Type Definitions
DESCRIPTION: This section details the structure and attributes of key data types and configuration objects within the `genai.types` module of the Google Cloud Generative AI Python client library. It includes classes like `CreateTuningJobConfig`, `DatasetDistribution`, and their corresponding dictionary representations, along with their respective properties.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CreateTuningJobConfig:
  adapter_size
  batch_size
  description
  epoch_count
  export_last_checkpoint_only
  http_options
  learning_rate
  learning_rate_multiplier
  tuned_model_display_name
  validation_dataset
CreateTuningJobConfigDict:
  adapter_size
  batch_size
  description
  epoch_count
  export_last_checkpoint_only
  http_options
  learning_rate
  learning_rate_multiplier
  tuned_model_display_name
  validation_dataset
DatasetDistribution:
  buckets
  max
  mean
  median
  min
  p5
  p95
  sum
DatasetDistributionDict:
  buckets
  max
  mean
  median
  min
  p5
  p95
  sum
DatasetDistributionDistributionBucket:
  count
  left
  right
DatasetDistributionDistributionBucketDict:
  count
  left
  right
```

----------------------------------------

TITLE: Compute Tokens (Vertex AI Specific)
DESCRIPTION: This snippet demonstrates `client.models.compute_tokens`, a function similar to `count_tokens` but specifically supported only within Vertex AI environments. It calculates the token count for the provided content.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
response = client.models.compute_tokens(
    model='gemini-2.0-flash-001',
    contents='why is the sky blue?',
)
print(response)
```

----------------------------------------

TITLE: Google Cloud Generative AI Python Library Type Definitions
DESCRIPTION: This section provides an overview of the core data types and their attributes within the `genai.types` module of the Google Cloud Generative AI Python library. It details structures related to batch job handling, content representation, and behavioral configurations, outlining the properties available for each type.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
BatchJobDestination:
  bigquery_uri
  file_name
  format
  gcs_uri
  inlined_responses
BatchJobDestinationDict:
  bigquery_uri
  file_name
  format
  gcs_uri
  inlined_responses
BatchJobDict:
  create_time
  dest
  display_name
  end_time
  error
  model
  name
  src
  start_time
  state
  update_time
BatchJobSource:
  bigquery_uri
  file_name
  format
  gcs_uri
  inlined_requests
BatchJobSourceDict:
  bigquery_uri
  file_name
  format
  gcs_uri
  inlined_requests
Behavior:
  BLOCKING
  NON_BLOCKING
  UNSPECIFIED
Blob:
  data
  display_name
  mime_type
BlobDict:
  data
  display_name
  mime_type
BlockedReason:
  BLOCKED_REASON_UNSPECIFIED
  BLOCKLIST
  OTHER
  PROHIBITED_CONTENT
  SAFETY
CachedContent:
  create_time
  display_name
  expire_time
  model
  name
  update_time
```

----------------------------------------

TITLE: Google Gen AI SDK Core Type Definitions
DESCRIPTION: Defines the structure and members of key data types used across the Google Gen AI SDK, including configurations for video, voice, and weighted prompts. These types are fundamental for interacting with the SDK's various features.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
VideoDict:
  video_bytes
VideoMetadata:
  end_offset
  fps
  start_offset
VideoMetadataDict:
  end_offset
  fps
  start_offset
VoiceConfig:
  prebuilt_voice_config
VoiceConfigDict:
  prebuilt_voice_config
WeightedPrompt:
  text
  weight
WeightedPromptDict:
  text
  weight
```

----------------------------------------

TITLE: Define JSON Response Schema with Pydantic in Google GenAI
DESCRIPTION: This snippet demonstrates how to use a Pydantic `BaseModel` to define the expected JSON response schema. The model will attempt to generate content that conforms to the structure and types defined in the `CountryInfo` Pydantic class when `response_mime_type` is set to 'application/json'.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from pydantic import BaseModel
from google.genai import types

class CountryInfo(BaseModel):
    name: str
    population: int
    capital: str
    continent: str
    gdp: int
    official_language: str
    total_area_sq_mi: int

response = client.models.generate_content(
    model='gemini-2.0-flash-001',
    contents='Give me information for the United States.',
    config=types.GenerateContentConfig(
        response_mime_type='application/json',
        response_schema=CountryInfo,
    ),
)
print(response.text)

```

----------------------------------------

TITLE: Google Cloud Generative AI Python API Type Definitions
DESCRIPTION: Detailed API documentation for core data types and their properties used in the Google Cloud Generative AI Python library. This includes specifications for supervised tuning, test data structures, thinking configurations, token information, and various tool definitions.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedTuningSpecDict:
  training_dataset_uri
  validation_dataset_uri

TestTableFile:
  comment
  parameter_names
  test_method
  test_table

TestTableFileDict:
  comment
  parameter_names
  test_method
  test_table

TestTableItem:
  exception_if_mldev
  exception_if_vertex
  has_union
  ignore_keys
  name
  override_replay_id
  parameters
  skip_in_api_mode

TestTableItemDict:
  exception_if_mldev
  exception_if_vertex
  has_union
  ignore_keys
  name
  override_replay_id
  parameters
  skip_in_api_mode

ThinkingConfig:
  include_thoughts
  thinking_budget

ThinkingConfigDict:
  include_thoughts
  thinking_budget

TokensInfo:
  role
  token_ids
  tokens

TokensInfoDict:
  role
  token_ids
  tokens

Tool:
  code_execution
  enterprise_web_search
  function_declarations
  google_maps
  google_search
  google_search_retrieval
  retrieval
  url_context

ToolCodeExecution:

ToolCodeExecutionDict:

ToolConfig:
  function_calling_config
  retrieval_config

ToolConfigDict:
```

----------------------------------------

TITLE: Google GenAI Python `genai.types` Module API Reference
DESCRIPTION: Detailed API reference for core types and configurations used in function calling and content generation within the `genai.types` module of the Google GenAI Python library. This includes enums for function calling modes, classes for function declarations and responses, and configuration options for content generation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FunctionCallingConfigMode (Enum):
  ANY
  AUTO
  MODE_UNSPECIFIED
  NONE

FunctionDeclaration (Class):
  behavior
  description
  name
  parameters
  parameters_json_schema
  response
  response_json_schema
  from_callable()
  from_callable_with_api_option()

FunctionDeclarationDict (Type Alias/Dict):
  behavior
  description
  name
  parameters
  parameters_json_schema
  response
  response_json_schema

FunctionResponse (Class):
  id
  name
  response
  scheduling
  will_continue
  from_mcp_response()

FunctionResponseDict (Type Alias/Dict):
  id
  name
  response
  scheduling
  will_continue

FunctionResponseScheduling (Enum):
  INTERRUPT
  SCHEDULING_UNSPECIFIED
  SILENT
  WHEN_IDLE

GenerateContentConfig (Class):
  audio_timestamp
  automatic_function_calling
  cached_content
  candidate_count
  frequency_penalty
  http_options
  labels
  logprobs
  max_output_tokens
```

----------------------------------------

TITLE: Limit Automatic Function Calling Turns in Google GenAI
DESCRIPTION: This example shows how to control the number of automatic function calling turns. By setting `automatic_function_calling.maximum_remote_calls` to `x + 1` (where `x` is the desired number of turns), the SDK will perform automatic function calls up to the specified limit before returning the response.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

def get_current_weather(location: str) -> str:
    """Returns the current weather.

    Args:
        location: The city and state, e.g. San Francisco, CA
    """
    return "sunny"

response = client.models.generate_content(
    model="gemini-2.0-flash-001",
    contents="What is the weather like in Boston?",
    config=types.GenerateContentConfig(
        tools=[get_current_weather],
        automatic_function_calling=types.AutomaticFunctionCallingConfig(
            maximum_remote_calls=2
        ),
        tool_config=types.ToolConfig(
            function_calling_config=types.FunctionCallingConfig(mode='ANY')
        ),
    ),
)
```

----------------------------------------

TITLE: genai.files Module API Reference
DESCRIPTION: API documentation for the `genai.files` module, specifically the `AsyncFiles` class and its method for file deletion.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
genai.files module:
  AsyncFiles:
    delete()
```

----------------------------------------

TITLE: genai.files Module API Reference
DESCRIPTION: API documentation for the `genai.files` module, providing interfaces for managing files, including upload, download, retrieval, listing, and deletion operations for both asynchronous and synchronous contexts.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AsyncFiles:
  download()
  get()
  list()
  upload()
Files:
  delete()
  download()
  get()
  list()
  upload()
```

----------------------------------------

TITLE: API Reference for genai.types.RagChunk
DESCRIPTION: Documents the structure and members of the `RagChunk` type within the `genai.types` module, representing a chunk of data for Retrieval Augmented Generation (RAG).
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
RagChunk:
  page_span
  text
```

----------------------------------------

TITLE: List Base Models Asynchronously (Python)
DESCRIPTION: Shows how to asynchronously list available base models using `client.aio.models.list()` and manage pagination with the `async_pager` object for efficient retrieval of models in an asynchronous context.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
async for job in await client.aio.models.list():
    print(job)
```

LANGUAGE: Python
CODE:
```
async_pager = await client.aio.models.list(config={'page_size': 10})
print(async_pager.page_size)
print(async_pager[0])
await async_pager.next_page()
print(async_pager[0])
```

----------------------------------------

TITLE: genai.live Module API Reference
DESCRIPTION: API documentation for the `genai.live` module, covering asynchronous live interaction capabilities. This includes connecting to live sessions and managing message sending and receiving within those sessions.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AsyncLive:
  connect()
  music
AsyncSession:
  close()
  receive()
  send()
  send_client_content()
  send_realtime_input()
  send_tool_response()
  start_stream()
```

----------------------------------------

TITLE: API Reference for genai.types.RagChunkDict
DESCRIPTION: Documents the structure and members of the `RagChunkDict` type within the `genai.types` module, likely a dictionary representation of `RagChunk`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
RagChunkDict:
  page_span
  text
```

----------------------------------------

TITLE: genai.client Module API Reference
DESCRIPTION: API documentation for the `genai.client` module, including `AsyncClient`, `Client`, and `DebugConfig` classes, detailing their attributes and methods for client configuration and interaction with the GenAI service.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
genai.client module:
  AsyncClient:
    auth_tokens
    batches
    caches
    chats
    files
    live
    models
    operations
    tunings
  Client:
    api_key
    vertexai
    credentials
    project
    location
    debug_config
    http_options
    aio
    auth_tokens
    batches
    caches
    chats
    files
    models
    operations
    tunings
    vertexai
  DebugConfig:
    client_mode
    replay_id
    replays_directory
```

----------------------------------------

TITLE: genai.models Module API Reference
DESCRIPTION: API documentation for the `genai.models` module, detailing methods for interacting with generative AI models. This includes operations like token computation, content generation, image/video generation, and model management (get, list, update, delete).
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AsyncModels:
  compute_tokens()
  count_tokens()
  delete()
  edit_image()
  embed_content()
  generate_content()
  generate_content_stream()
  generate_images()
  generate_videos()
  get()
  list()
  update()
  upscale_image()
Models:
  compute_tokens()
  count_tokens()
  delete()
  edit_image()
  embed_content()
  generate_content()
  generate_content_stream()
  generate_images()
  generate_videos()
  get()
  list()
  update()
  upscale_image()
```

----------------------------------------

TITLE: API Reference for GroundingChunk Type
DESCRIPTION: Defines the structure and members of the `GroundingChunk` type within the `genai.types` module, specifying how retrieved context and web information are structured.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingChunk:
  retrieved_context
  web
```

----------------------------------------

TITLE: genai.caches Module API Reference
DESCRIPTION: API documentation for the `genai.caches` module, including `AsyncCaches` and `Caches` classes and their methods for managing cached data.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
genai.caches module:
  AsyncCaches:
    create()
    delete()
    get()
    list()
    update()
  Caches:
    create()
    delete()
    get()
    list()
    update()
```

----------------------------------------

TITLE: genai.tokens Module API Reference
DESCRIPTION: API documentation for the `genai.tokens` module, providing methods for token-related operations, specifically for creating tokens in both asynchronous and synchronous contexts.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AsyncTokens:
  create()
Tokens:
  create()
```

----------------------------------------

TITLE: API Reference for GroundingMetadataDict Type
DESCRIPTION: Defines the dictionary representation and members of the `GroundingMetadataDict` type within the `genai.types` module, mirroring the `GroundingMetadata` type.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingMetadataDict:
  grounding_chunks
  grounding_supports
  retrieval_metadata
  retrieval_queries
  search_entry_point
  web_search_queries
```

----------------------------------------

TITLE: genai.chats Module API Reference
DESCRIPTION: API documentation for the `genai.chats` module, covering `AsyncChat`, `AsyncChats`, `Chat`, and `Chats` classes and their methods for handling chat interactions.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
genai.chats module:
  AsyncChat:
    send_message()
    send_message_stream()
  AsyncChats:
    create()
  Chat:
    send_message()
    send_message_stream()
  Chats:
    create()
```

----------------------------------------

TITLE: genai.types Module API Reference
DESCRIPTION: API documentation for the `genai.types` module, which defines various data types used within the `genai` library, such as `ActivityEnd`, `ActivityEndDict`, and `ActivityHandling`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ActivityEnd
ActivityEndDict
ActivityHandling
```

----------------------------------------

TITLE: API Definition for SafetyRatingDict
DESCRIPTION: Defines the dictionary representation of `SafetyRating`. This type mirrors the `SafetyRating` class, providing a dictionary-based structure for detailed safety assessment information, including `blocked`, `category`, `probability`, `probability_score`, `severity`, and `severity_score`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SafetyRatingDict:
  blocked
  category
  probability
  probability_score
  severity
  severity_score
```

----------------------------------------

TITLE: AuthConfig Type Definition
DESCRIPTION: Represents the comprehensive configuration for various authentication methods, including API key, Google Service Account, HTTP Basic, OAuth, and OIDC.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AuthConfig:
  api_key_config
  auth_type
  google_service_account_config
  http_basic_auth_config
  oauth_config
  oidc_config
```

----------------------------------------

TITLE: FunctionCallDict Type Definition
DESCRIPTION: Defines the dictionary-like structure for `FunctionCallDict` within the `genai.types` module, mirroring `FunctionCall` for dictionary representation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FunctionCallDict:
  args
  id
  name
```

----------------------------------------

TITLE: API Documentation for Candidate
DESCRIPTION: Defines the structure and members of the `Candidate` type within the `genai` library. This type represents a generated candidate response from a model.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Candidate:
  avg_logprobs
  citation_metadata
  content
  finish_message
  finish_reason
  grounding_metadata
  index
  logprobs_result
  safety_ratings
  token_count
  url_context_metadata
```

----------------------------------------

TITLE: AuthConfigDict Type Definition
DESCRIPTION: Represents the dictionary definition for the `AuthConfigDict` type, a dictionary representation of `AuthConfig`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AuthConfigDict:
  api_key_config
  auth_type
  google_service_account_config
  http_basic_auth_config
  oauth_config
  oidc_config
```

----------------------------------------

TITLE: FunctionCallingConfig Type Definition
DESCRIPTION: Defines the configuration for function calling within the `genai.types` module, specifying allowed functions and the calling mode.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FunctionCallingConfig:
  allowed_function_names
  mode
```

----------------------------------------

TITLE: AuthConfigGoogleServiceAccountConfig Type Definition
DESCRIPTION: Represents the configuration for Google Service Account based authentication, specifying the service account details.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AuthConfigGoogleServiceAccountConfig:
  service_account
```

----------------------------------------

TITLE: AuthConfigGoogleServiceAccountConfigDict Type Definition
DESCRIPTION: Represents the dictionary definition for the `AuthConfigGoogleServiceAccountConfigDict` type, a dictionary representation of `AuthConfigGoogleServiceAccountConfig`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AuthConfigGoogleServiceAccountConfigDict:
  service_account
```

----------------------------------------

TITLE: GenerateContentResponsePromptFeedback Class Definition
DESCRIPTION: Outlines the structure for prompt feedback within a content generation response, detailing reasons for blocking, associated messages, and safety ratings.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateContentResponsePromptFeedback:
  block_reason
  block_reason_message
  safety_ratings
```

----------------------------------------

TITLE: AuthConfigOauthConfigDict Type Definition
DESCRIPTION: Represents the dictionary definition for the `AuthConfigOauthConfigDict` type, a dictionary representation of `AuthConfigOauthConfig`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AuthConfigOauthConfigDict:
```

----------------------------------------

TITLE: AuthConfigHttpBasicAuthConfig Type Definition
DESCRIPTION: Represents the configuration for HTTP Basic authentication, typically containing a credential secret.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AuthConfigHttpBasicAuthConfig:
  credential_secret
```

----------------------------------------

TITLE: GenerateContentResponsePromptFeedbackDict Class Definition
DESCRIPTION: Specifies the dictionary representation of `GenerateContentResponsePromptFeedback`, including fields for block reason, block reason message, and safety ratings.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateContentResponsePromptFeedbackDict:
  block_reason
  block_reason_message
  safety_ratings
```

----------------------------------------

TITLE: API Documentation for CachedContent
DESCRIPTION: Defines the structure and members of the `CachedContent` type within the `genai` library. This type likely represents cached content metadata.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CachedContent:
  usage_metadata
```

----------------------------------------

TITLE: API Documentation for CachedContentDict
DESCRIPTION: Defines the structure and members of the `CachedContentDict` type within the `genai` library. This dictionary-like type holds detailed metadata for cached content.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CachedContentDict:
  create_time
  display_name
  expire_time
  model
  name
  update_time
  usage_metadata
```

----------------------------------------

TITLE: GenerateContentResponseDict Class Definition
DESCRIPTION: Describes the dictionary representation of the `GenerateContentResponse`, focusing on its key fields such as candidates, creation time, model version, prompt feedback, response ID, SDK HTTP response, and usage metadata.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateContentResponseDict:
  candidates
  create_time
  model_version
  prompt_feedback
  response_id
  sdk_http_response
  usage_metadata
```

----------------------------------------

TITLE: API Documentation for CheckpointDict
DESCRIPTION: Defines the structure and members of the `CheckpointDict` type within the `genai` library. This dictionary-like type represents a training checkpoint.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CheckpointDict:
```

----------------------------------------

TITLE: API Documentation for CachedContentUsageMetadataDict
DESCRIPTION: Defines the structure and members of the `CachedContentUsageMetadataDict` type within the `genai` library. This dictionary-like type holds usage statistics for cached content.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CachedContentUsageMetadataDict:
  audio_duration_seconds
  image_count
  text_count
  total_token_count
  video_duration_seconds
```

----------------------------------------

TITLE: API Reference for LogprobsResultDict Type
DESCRIPTION: Defines the dictionary structure for log probabilities results, including chosen and top candidate lists.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LogprobsResultDict:
  chosen_candidates
  top_candidates
```

----------------------------------------

TITLE: Google GenAI Python API Type Reference
DESCRIPTION: This section documents various configuration and response types within the Google GenAI Python library, including control reference settings, token counting configurations, and authentication token creation parameters. Each entry lists the type and its associated attributes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ControlReferenceConfig:
  control_type
  enable_control_image_computation
ControlReferenceConfigDict:
  control_type
  enable_control_image_computation
ControlReferenceImage:
  config
  control_image_config
  reference_id
  reference_image
  reference_type
ControlReferenceImageDict:
  config
  reference_id
  reference_image
  reference_type
ControlReferenceType:
  CONTROL_TYPE_CANNY
  CONTROL_TYPE_DEFAULT
  CONTROL_TYPE_FACE_MESH
  CONTROL_TYPE_SCRIBBLE
CountTokensConfig:
  generation_config
  http_options
  system_instruction
  tools
CountTokensConfigDict:
  generation_config
  http_options
  system_instruction
  tools
CountTokensResponse:
  cached_content_token_count
  total_tokens
CountTokensResponseDict:
  cached_content_token_count
  total_tokens
CreateAuthTokenConfig:
  expire_time
  http_options
  live_connect_constraints
  lock_additional_fields
  new_session_expire_time
  uses
CreateAuthTokenConfigDict:
  expire_time
```

----------------------------------------

TITLE: API Reference for DeleteCachedContentConfigDict Type
DESCRIPTION: Defines the dictionary-based configuration options for deleting cached content, including HTTP options, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteCachedContentConfigDict:
  - http_options
```

----------------------------------------

TITLE: API Reference for LogprobsResultTopCandidatesDict Type
DESCRIPTION: Defines the dictionary representation for a collection of top log probability candidates.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LogprobsResultTopCandidatesDict:
  candidates
```

----------------------------------------

TITLE: API Reference for DatasetStats Type
DESCRIPTION: Defines the structure and attributes for the `DatasetStats` type, used within the Google Cloud Generative AI Python library to represent statistics about a dataset.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DatasetStats:
  - total_billable_character_count
  - total_tuning_character_count
  - tuning_dataset_example_count
  - tuning_step_count
  - user_dataset_examples
  - user_input_token_distribution
  - user_message_per_example_distribution
  - user_output_token_distribution
```

----------------------------------------

TITLE: API Reference for DeleteCachedContentResponse Type
DESCRIPTION: Defines the response structure for a delete cached content operation within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteCachedContentResponse:
```

----------------------------------------

TITLE: API Reference for LogprobsResultCandidate Type
DESCRIPTION: Defines the structure and members of the `LogprobsResultCandidate` type, which likely represents a candidate token's log probability information.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LogprobsResultCandidate:
  log_probability
  token
  token_id
```

----------------------------------------

TITLE: API Reference for DatasetStatsDict Type
DESCRIPTION: Defines the structure and attributes for the `DatasetStatsDict` type, likely a dictionary representation of `DatasetStats`, used within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DatasetStatsDict:
  - total_billable_character_count
  - total_tuning_character_count
  - tuning_dataset_example_count
  - tuning_step_count
  - user_dataset_examples
  - user_input_token_distribution
  - user_message_per_example_distribution
  - user_output_token_distribution
```

----------------------------------------

TITLE: API Reference for DeleteCachedContentResponseDict Type
DESCRIPTION: Defines the dictionary-based response structure for a delete cached content operation within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteCachedContentResponseDict:
```

----------------------------------------

TITLE: FunctionCall Type Definition
DESCRIPTION: Defines the structure for a `FunctionCall` within the `genai.types` module, representing a call to a tool function with its arguments.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FunctionCall:
  args
  id
  name
```

----------------------------------------

TITLE: API Reference for DeleteCachedContentConfig Type
DESCRIPTION: Defines the configuration options for deleting cached content, including HTTP options, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteCachedContentConfig:
  - http_options
```

----------------------------------------

TITLE: API Reference for DeleteFileConfig Type
DESCRIPTION: Defines the configuration options for deleting a file, including HTTP options, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteFileConfig:
  - http_options
```

----------------------------------------

TITLE: FunctionCallingConfigDict Type Definition
DESCRIPTION: Defines the dictionary-like structure for `FunctionCallingConfigDict` within the `genai.types` module, mirroring `FunctionCallingConfig` for dictionary representation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FunctionCallingConfigDict:
  allowed_function_names
  mode
```

----------------------------------------

TITLE: API Reference for DistillationDataStats Type
DESCRIPTION: Defines the structure and attributes for distillation data statistics, including training dataset statistics, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DistillationDataStats:
  - training_dataset_stats
```

----------------------------------------

TITLE: API Reference for DeleteResourceJob Type
DESCRIPTION: Defines the structure and attributes for a resource deletion job, including its status and name, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteResourceJob:
  - done
  - error
  - name
```

----------------------------------------

TITLE: EditImageConfig API Reference
DESCRIPTION: API documentation for the `EditImageConfig` type, detailing its attributes for configuring image editing operations within the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
EditImageConfig:
  aspect_ratio
  base_steps
  edit_mode
  guidance_scale
  http_options
  include_rai_reason
  include_safety_attributes
  language
  negative_prompt
```

----------------------------------------

TITLE: DistillationSpec API Reference
DESCRIPTION: API documentation for the `DistillationSpec` type, detailing its attributes for specifying distillation processes within the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DistillationSpec:
  base_teacher_model
  hyper_parameters
  pipeline_root_directory
  student_model
  training_dataset_uri
  tuned_teacher_model_source
  validation_dataset_uri
```

----------------------------------------

TITLE: GetTuningJobConfigDict API Reference
DESCRIPTION: Defines the structure and properties for the `GetTuningJobConfigDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetTuningJobConfigDict:
  http_options: Property of GetTuningJobConfigDict.
```

----------------------------------------

TITLE: API Reference for DeleteResourceJobDict Type
DESCRIPTION: Defines the dictionary-based structure and attributes for a resource deletion job, including its status and name, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteResourceJobDict:
  - done
  - error
  - name
```

----------------------------------------

TITLE: API Reference for EditImageConfigDict Type
DESCRIPTION: Represents a dictionary-like configuration for image editing, mirroring the `EditImageConfig` type but often used for serialization or dynamic parameter passing. It includes detailed settings for aspect ratio, base steps, edit mode, guidance scale, HTTP options, safety attributes, language, negative prompt, and output specifications.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
EditImageConfigDict:
  - aspect_ratio
  - base_steps
  - edit_mode
  - guidance_scale
  - http_options
  - include_rai_reason
  - include_safety_attributes
  - language
  - negative_prompt
  - number_of_images
  - output_compression_quality
  - output_gcs_uri
  - output_mime_type
  - person_generation
  - safety_filter_level
  - seed
```

----------------------------------------

TITLE: DownloadFileConfigDict API Reference
DESCRIPTION: API documentation for the `DownloadFileConfigDict` type, detailing its attributes for configuring file downloads in a dictionary format within the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DownloadFileConfigDict:
  http_options
```

----------------------------------------

TITLE: DistillationHyperParametersDict API Reference
DESCRIPTION: API documentation for the `DistillationHyperParametersDict` type, detailing its attributes for configuring distillation hyperparameters in a dictionary format within the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DistillationHyperParametersDict:
  adapter_size
  epoch_count
  learning_rate_multiplier
```

----------------------------------------

TITLE: Structure 'contents' Argument with a String
DESCRIPTION: Presents the simplest way to provide input to 'generate_content' by directly passing a string, which the SDK will automatically interpret as a text part.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
contents='Why is the sky blue?'
```

----------------------------------------

TITLE: API Reference for EditImageResponse Type
DESCRIPTION: Specifies the structure of the response received after an image editing operation. This type primarily contains a list of generated images, providing access to the results of the image generation process.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
EditImageResponse:
  - generated_images
```

----------------------------------------

TITLE: DynamicRetrievalConfig API Reference
DESCRIPTION: API documentation for the `DynamicRetrievalConfig` type, detailing its attributes for dynamic retrieval configurations within the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DynamicRetrievalConfig:
  dynamic_threshold
  mode
```

----------------------------------------

TITLE: API Reference for DeleteBatchJobConfig Type
DESCRIPTION: Defines the configuration options for deleting a batch job, including HTTP options, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteBatchJobConfig:
  - http_options
```

----------------------------------------

TITLE: ActivityHandling Enum Definition
DESCRIPTION: Defines an enumeration for specifying how activity handling should behave, including options for no interruption or interruption at the start of an activity.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ActivityHandling:
  ACTIVITY_HANDLING_UNSPECIFIED
  NO_INTERRUPTION
  START_OF_ACTIVITY_INTERRUPTS
```

----------------------------------------

TITLE: DynamicRetrievalConfigMode API Reference
DESCRIPTION: API documentation for the `DynamicRetrievalConfigMode` type, detailing its attributes for dynamic retrieval modes within the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DynamicRetrievalConfigMode:
  MODE_DYNAMIC
  MODE_UNSPECIFIED
```

----------------------------------------

TITLE: API Reference for EditMode Enum
DESCRIPTION: Enumerates the various modes available for image editing operations. This enum provides predefined options such as background swap, controlled editing, default mode, inpainting (insertion/removal), outpainting, product image generation, and style transfer, guiding the behavior of image manipulation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
EditMode:
  - EDIT_MODE_BGSWAP
  - EDIT_MODE_CONTROLLED_EDITING
  - EDIT_MODE_DEFAULT
  - EDIT_MODE_INPAINT_INSERTION
  - EDIT_MODE_INPAINT_REMOVAL
  - EDIT_MODE_OUTPAINT
  - EDIT_MODE_PRODUCT_IMAGE
  - EDIT_MODE_STYLE
```

----------------------------------------

TITLE: DynamicRetrievalConfigDict API Reference
DESCRIPTION: API documentation for the `DynamicRetrievalConfigDict` type, detailing its attributes for dynamic retrieval configurations in a dictionary format within the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DynamicRetrievalConfigDict:
  dynamic_threshold
  mode
```

----------------------------------------

TITLE: TunedModelCheckpoint Type Definition
DESCRIPTION: Represents a specific checkpoint of a tuned model, with details like ID, endpoint, epoch, and step.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TunedModelCheckpoint:
  checkpoint_id
  endpoint
  epoch
  step
```

----------------------------------------

TITLE: TrafficType Enum Definition
DESCRIPTION: Enumerates different traffic handling types, such as on-demand or provisioned throughput, for genai services.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TrafficType:
  ON_DEMAND
  PROVISIONED_THROUGHPUT
  TRAFFIC_TYPE_UNSPECIFIED
```

----------------------------------------

TITLE: FileSource Enum Definition
DESCRIPTION: Defines the possible sources for a file within the `genai.types` module, indicating how the file was generated or uploaded.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FileSource:
  GENERATED
  SOURCE_UNSPECIFIED
  UPLOADED
```

----------------------------------------

TITLE: API Reference for EmbedContentConfigDict Type
DESCRIPTION: Provides a dictionary-based configuration for content embedding, mirroring the `EmbedContentConfig` type. It allows for flexible specification of parameters like auto-truncation, HTTP options, content MIME type, output dimensionality, task type, and content title.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
EmbedContentConfigDict:
  - auto_truncate
  - http_options
  - mime_type
  - output_dimensionality
  - task_type
  - title
```

----------------------------------------

TITLE: API Reference for EditImageConfig Type
DESCRIPTION: Defines the configuration parameters for image editing operations within the `genai` library. This type specifies various settings such as the number of images to generate, output quality, GCS URI for output, MIME type, person generation, safety filter level, and seed for reproducibility.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
EditImageConfig:
  - number_of_images
  - output_compression_quality
  - output_gcs_uri
  - output_mime_type
  - person_generation
  - safety_filter_level
  - seed
```

----------------------------------------

TITLE: FileState Enum Definition
DESCRIPTION: Defines the possible states of a file within the `genai.types` module, indicating its current processing status.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FileState:
  ACTIVE
  FAILED
  PROCESSING
  STATE_UNSPECIFIED
```

----------------------------------------

TITLE: GetFileConfig API Reference
DESCRIPTION: Defines the structure and properties for the `GetFileConfig` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetFileConfig:
  http_options: Property of GetFileConfig.
```

----------------------------------------

TITLE: API Reference for EditImageResponseDict Type
DESCRIPTION: Defines the dictionary representation of the response from an image editing operation. Similar to `EditImageResponse`, it provides access to the generated images in a dictionary format, suitable for parsing and data manipulation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
EditImageResponseDict:
  - generated_images
```

----------------------------------------

TITLE: API Reference for GenerateContentConfig Class Properties
DESCRIPTION: Documents the available configuration parameters for the `GenerateContentConfig` class, which is used to specify various settings for content generation requests in the Google Generative AI Python library. These settings include safety controls, response formats, and model behavior.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateContentConfig:
  media_resolution
  model_selection_config
  presence_penalty
  response_json_schema
  response_logprobs
  response_mime_type
  response_modalities
  response_schema
  routing_config
  safety_settings
  seed
  speech_config
  stop_sequences
  system_instruction
  temperature
  thinking_config
  tool_config
  tools
  top_k
  top_p
```

----------------------------------------

TITLE: GetCachedContentConfig API Reference
DESCRIPTION: Defines the structure and properties for the `GetCachedContentConfig` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetCachedContentConfig:
  http_options: Property of GetCachedContentConfig.
```

----------------------------------------

TITLE: FileDict Type Definition
DESCRIPTION: Defines the comprehensive structure and attributes for the `FileDict` type within the `genai.types` module, representing detailed information about a file, including its state, timestamps, and hashes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FileDict:
  create_time
  display_name
  download_uri
  error
  expiration_time
  mime_type
  name
  sha256_hash
  size_bytes
  source
  state
  update_time
  uri
  video_metadata
```

----------------------------------------

TITLE: API Reference for GenerateContentConfigDict Class Properties
DESCRIPTION: Documents the available configuration parameters for the `GenerateContentConfigDict` class, which likely represents a dictionary-based structure for content generation settings. This class provides a flexible way to pass configuration options, including advanced features like automatic function calling and caching.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateContentConfigDict:
  audio_timestamp
  automatic_function_calling
  cached_content
  candidate_count
  frequency_penalty
  http_options
  labels
  logprobs
  max_output_tokens
  media_resolution
  model_selection_config
  presence_penalty
  response_json_schema
  response_logprobs
  response_mime_type
  response_modalities
  response_schema
  routing_config
  safety_settings
  seed
  speech_config
  stop_sequences
  system_instruction
```

----------------------------------------

TITLE: DownloadFileConfig API Reference
DESCRIPTION: API documentation for the `DownloadFileConfig` type, detailing its attributes for configuring file downloads within the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DownloadFileConfig:
  http_options
```

----------------------------------------

TITLE: FileStatusDict Type Definition
DESCRIPTION: Defines the dictionary-like structure for `FileStatusDict` within the `genai.types` module, mirroring `FileStatus` for dictionary representation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
FileStatusDict:
  code
  details
  message
```

----------------------------------------

TITLE: GenerateContentConfigDict Configuration Fields
DESCRIPTION: Lists the configurable parameters available within the `GenerateContentConfigDict` for controlling content generation behavior, such as temperature, top-k, top-p, and tool configurations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateContentConfigDict:
  temperature
  thinking_config
  tool_config
  tools
  top_k
  top_p
```

----------------------------------------

TITLE: Download File for Content Generation
DESCRIPTION: Provides a shell command to download a file from a Google Cloud Storage URL, which can then be used for content generation with the Gemini Developer API.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Shell
CODE:
```
!wget -q https://storage.googleapis.com/generativeai-downloads/data/a11.txt
```

----------------------------------------

TITLE: GenerateContentResponseUsageMetadata Class Definition
DESCRIPTION: Details the usage metadata associated with a content generation response, providing information on token counts for cached content and candidates, along with their respective details.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateContentResponseUsageMetadata:
  cache_tokens_details
  cached_content_token_count
  candidates_token_count
  candidates_tokens_details
```

----------------------------------------

TITLE: GenerateVideosConfig API Reference
DESCRIPTION: Defines the configuration parameters for video generation requests. This includes settings for video duration, quality, prompts, and output destinations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateVideosConfig:
  aspect_ratio:
  compression_quality:
  duration_seconds:
  enhance_prompt:
  fps:
  generate_audio:
  http_options:
  last_frame:
  negative_prompt:
  number_of_videos:
  output_gcs_uri:
  person_generation:
  pubsub_topic:
  resolution:
  seed:
```

----------------------------------------

TITLE: Upscale Generated Image with Google GenAI Python Client
DESCRIPTION: Shows how to upscale a previously generated image using `client.models.upscale_image`. This operation requires the model, the image object to be upscaled, an upscale factor (e.g., 'x2'), and configuration for output, including RAI reason and MIME type. Note that image upscaling is currently supported only in Vertex AI.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: python
CODE:
```
from google.genai import types

# Upscale the generated image from above
response2 = client.models.upscale_image(
    model='imagen-3.0-generate-002',
    image=response1.generated_images[0].image,
    upscale_factor='x2',
    config=types.UpscaleImageConfig(
        include_rai_reason=True,
        output_mime_type='image/jpeg',
    ),
)
response2.generated_images[0].image.show()
```

----------------------------------------

TITLE: GenerateImagesConfigDict API Reference
DESCRIPTION: Defines the configuration parameters for image generation requests. This dictionary allows specifying various aspects of the generated images, such as aspect ratio, prompts, safety filters, and output settings.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateImagesConfigDict:
  aspect_ratio:
  enhance_prompt:
  guidance_scale:
  http_options:
  include_rai_reason:
  include_safety_attributes:
  language:
  negative_prompt:
  number_of_images:
  output_compression_quality:
  output_gcs_uri:
  output_mime_type:
  person_generation:
  safety_filter_level:
  seed:
```

----------------------------------------

TITLE: GenerateVideosConfigDict API Reference
DESCRIPTION: A dictionary representation of the configuration for video generation requests, allowing specification of various video properties and generation parameters.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateVideosConfigDict:
  aspect_ratio:
  compression_quality:
  duration_seconds:
  enhance_prompt:
  fps:
  generate_audio:
  http_options:
```

----------------------------------------

TITLE: API Reference for DeleteFileResponse Type
DESCRIPTION: Defines the response structure for a delete file operation within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteFileResponse:
```

----------------------------------------

TITLE: GenerateImagesResponse API Reference
DESCRIPTION: Represents the response object received after an image generation request. It contains information about the generated images and associated safety attributes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateImagesResponse:
  generated_images:
  positive_prompt_safety_attributes:
```

----------------------------------------

TITLE: API Reference for genai.types.GenerationConfigRoutingConfigAutoRoutingMode
DESCRIPTION: Defines parameters for automatic model routing within the generation configuration. This mode allows the system to automatically select the most appropriate model based on specified preferences or criteria.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
class GenerationConfigRoutingConfigAutoRoutingMode:
  model_routing_preference: Optional[str]
```

----------------------------------------

TITLE: API Reference for DeleteFileResponseDict Type
DESCRIPTION: Defines the dictionary-based response structure for a delete file operation within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteFileResponseDict:
```

----------------------------------------

TITLE: GenerateImagesResponseDict API Reference
DESCRIPTION: A dictionary representation of the response object for image generation, providing access to generated images and safety attributes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerateImagesResponseDict:
  generated_images:
  positive_prompt_safety_attributes:
```

----------------------------------------

TITLE: API Reference for genai.types.GenerationConfigRoutingConfigDict
DESCRIPTION: A dictionary representation for routing configurations within the generation process. This allows for defining routing preferences using a dictionary structure, supporting both automatic and manual routing modes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
class GenerationConfigRoutingConfigDict:
  # Attributes would mirror GenerationConfigRoutingConfig, but as dictionary keys
  auto_mode: Optional[GenerationConfigRoutingConfigAutoRoutingModeDict]
  manual_mode: Optional[dict]
```

----------------------------------------

TITLE: API Reference for DeleteModelResponse Type
DESCRIPTION: Defines the response structure for a delete model operation within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteModelResponse:
```

----------------------------------------

TITLE: API Reference for genai.types.GenerationConfigRoutingConfig
DESCRIPTION: Specifies routing configurations for generative models, allowing for either automatic or manual routing modes. This class helps direct requests to specific model instances or manage load balancing based on defined preferences.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
class GenerationConfigRoutingConfig:
  auto_mode: Optional[GenerationConfigRoutingConfigAutoRoutingMode]
  manual_mode: Optional[dict]
```

----------------------------------------

TITLE: GenerationConfigRoutingConfigDict API Reference
DESCRIPTION: Defines the structure and properties for the `GenerationConfigRoutingConfigDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerationConfigRoutingConfigDict:
  auto_mode: Property of GenerationConfigRoutingConfigDict.
  manual_mode: Property of GenerationConfigRoutingConfigDict.
```

----------------------------------------

TITLE: API Reference for DeleteModelConfig Type
DESCRIPTION: Defines the configuration options for deleting a model, including HTTP options, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteModelConfig:
  - http_options
```

----------------------------------------

TITLE: API Reference for genai.types.GenerationConfigRoutingConfigAutoRoutingModeDict
DESCRIPTION: A dictionary representation for automatic model routing preferences within the generation configuration. This provides a flexible way to define how models are automatically selected for generation tasks.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
class GenerationConfigRoutingConfigAutoRoutingModeDict:
  model_routing_preference: Optional[str]
```

----------------------------------------

TITLE: GenerationConfigThinkingConfigDict API Reference
DESCRIPTION: Defines the structure and properties for the `GenerationConfigThinkingConfigDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerationConfigThinkingConfigDict:
  include_thoughts: Property of GenerationConfigThinkingConfigDict.
  thinking_budget: Property of GenerationConfigThinkingConfigDict.
```

----------------------------------------

TITLE: GetBatchJobConfigDict API Reference
DESCRIPTION: Defines the structure and properties for the `GetBatchJobConfigDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetBatchJobConfigDict:
  http_options: Property of GetBatchJobConfigDict.
```

----------------------------------------

TITLE: GetCachedContentConfigDict API Reference
DESCRIPTION: Defines the structure and properties for the `GetCachedContentConfigDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetCachedContentConfigDict:
  http_options: Property of GetCachedContentConfigDict.
```

----------------------------------------

TITLE: GetBatchJobConfig API Reference
DESCRIPTION: Defines the structure and properties for the `GetBatchJobConfig` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetBatchJobConfig:
  http_options: Property of GetBatchJobConfig.
```

----------------------------------------

TITLE: API Reference for DeleteBatchJobConfigDict Type
DESCRIPTION: Defines the dictionary-based configuration options for deleting a batch job, including HTTP options, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DeleteBatchJobConfigDict:
  - http_options
```

----------------------------------------

TITLE: GetModelConfig API Reference
DESCRIPTION: Defines the structure and properties for the `GetModelConfig` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetModelConfig:
  http_options: Property of GetModelConfig.
```

----------------------------------------

TITLE: GetFileConfigDict API Reference
DESCRIPTION: Defines the structure and properties for the `GetFileConfigDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetFileConfigDict:
  http_options: Property of GetFileConfigDict.
```

----------------------------------------

TITLE: API Reference for JobErrorDict Type
DESCRIPTION: A dictionary representation of a `JobError` object, providing access to error details in a key-value format. It mirrors the properties of the `JobError` class.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
JobErrorDict:
  code
  details
  message
```

----------------------------------------

TITLE: GetModelConfigDict API Reference
DESCRIPTION: Defines the structure and properties for the `GetModelConfigDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetModelConfigDict:
  http_options: Property of GetModelConfigDict.
```

----------------------------------------

TITLE: GetTuningJobConfig API Reference
DESCRIPTION: Defines the structure and properties for the `GetTuningJobConfig` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetTuningJobConfig:
  http_options: Property of GetTuningJobConfig.
```

----------------------------------------

TITLE: API Reference for JobError Type
DESCRIPTION: Represents an error encountered during a job execution. It includes a numeric code, detailed information, and a human-readable message describing the error.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
JobError:
  code
  details
  message
```

----------------------------------------

TITLE: GetOperationConfig API Reference
DESCRIPTION: Defines the structure and properties for the `GetOperationConfig` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GetOperationConfig:
  http_options: Property of GetOperationConfig.
```

----------------------------------------

TITLE: API Reference for GoogleSearchRetrieval Type
DESCRIPTION: Defines the structure and members of the `GoogleSearchRetrieval` type within the `genai.types` module, including its dynamic retrieval configuration.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GoogleSearchRetrieval:
  dynamic_retrieval_config
```

----------------------------------------

TITLE: API Reference for JobState Enum
DESCRIPTION: Defines the various states a job can be in throughout its lifecycle. This enumeration covers states from pending to succeeded or failed.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
JobState:
  JOB_STATE_CANCELLED
  JOB_STATE_CANCELLING
  JOB_STATE_EXPIRED
  JOB_STATE_FAILED
  JOB_STATE_PARTIALLY_SUCCEEDED
  JOB_STATE_PAUSED
  JOB_STATE_PENDING
  JOB_STATE_QUEUED
  JOB_STATE_RUNNING
  JOB_STATE_SUCCEEDED
  JOB_STATE_UNSPECIFIED
  JOB_STATE_UPDATING
```

----------------------------------------

TITLE: GoogleMaps API Reference
DESCRIPTION: Defines the structure and properties for the `GoogleMaps` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GoogleMaps:
  auth_config: Property of GoogleMaps.
```

----------------------------------------

TITLE: API Reference for GoogleTypeDateDict Type
DESCRIPTION: Defines the dictionary representation and members of the `GoogleTypeDateDict` type within the `genai.types` module, mirroring the `GoogleTypeDate` type.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GoogleTypeDateDict:
  day
  month
  year
```

----------------------------------------

TITLE: SupervisedTuningDatasetDistributionDatasetBucket API Reference
DESCRIPTION: Defines a single bucket within a supervised tuning dataset distribution, specifying its count and the left and right bounds of the bucket.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedTuningDatasetDistributionDatasetBucket:
  count
  left
  right
```

----------------------------------------

TITLE: GoogleMapsDict API Reference
DESCRIPTION: Defines the structure and properties for the `GoogleMapsDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GoogleMapsDict:
  auth_config: Property of GoogleMapsDict.
```

----------------------------------------

TITLE: API Reference for GroundingChunkDict Type
DESCRIPTION: Defines the dictionary representation and members of the `GroundingChunkDict` type within the `genai.types` module, mirroring the `GroundingChunk` type.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingChunkDict:
  retrieved_context
  web
```

----------------------------------------

TITLE: API Reference for SupervisedTuningDataStatsDict
DESCRIPTION: Defines the SupervisedTuningDataStatsDict type, likely a dictionary representation of supervised model tuning data statistics.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedTuningDataStatsDict:
  dropped_example_reasons
  total_billable_character_count
  total_billable_token_count
  total_truncated_example_count
  total_tuning_character_count
  truncated_example_indices
  tuning_dataset_example_count
  tuning_step_count
  user_dataset_examples
```

----------------------------------------

TITLE: GoogleRpcStatus API Reference
DESCRIPTION: Defines the structure and properties for the `GoogleRpcStatus` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GoogleRpcStatus:
  code: Property of GoogleRpcStatus.
  details: Property of GoogleRpcStatus.
  message: Property of GoogleRpcStatus.
```

----------------------------------------

TITLE: API Reference for GroundingMetadata Type
DESCRIPTION: Defines the structure and members of the `GroundingMetadata` type within the `genai.types` module, encompassing various metadata related to grounding, including chunks, supports, and retrieval information.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingMetadata:
  grounding_chunks
  grounding_supports
  retrieval_metadata
  retrieval_queries
  search_entry_point
  web_search_queries
```

----------------------------------------

TITLE: SupervisedTuningDatasetDistributionDict API Reference
DESCRIPTION: Represents a dictionary-like structure for the distribution of a supervised tuning dataset, providing statistical measures like sum, mean, median, min, max, and percentiles, along with bucketed data.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedTuningDatasetDistributionDict:
  billable_sum
  buckets
  max
  mean
  median
  min
  p5
  p95
  sum
```

----------------------------------------

TITLE: GoogleRpcStatusDict API Reference
DESCRIPTION: Defines the structure and properties for the `GoogleRpcStatusDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GoogleRpcStatusDict:
  code: Property of GoogleRpcStatusDict.
  details: Property of GoogleRpcStatusDict.
  message: Property of GoogleRpcStatusDict.
```

----------------------------------------

TITLE: HarmProbability Enum Definition
DESCRIPTION: Defines the `HarmProbability` enumeration, representing the likelihood of content being harmful.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
HarmProbability (Enum):
  HARM_PROBABILITY_UNSPECIFIED
  HIGH
  LOW
  MEDIUM
  NEGLIGIBLE
```

----------------------------------------

TITLE: API Reference for DistillationDataStatsDict Type
DESCRIPTION: Defines the dictionary-based structure and attributes for distillation data statistics, including training dataset statistics, within the Google Cloud Generative AI Python library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DistillationDataStatsDict:
```

----------------------------------------

TITLE: API Reference for GoogleSearchRetrievalDict Type
DESCRIPTION: Defines the dictionary representation and members of the `GoogleSearchRetrievalDict` type within the `genai.types` module, mirroring the `GoogleSearchRetrieval` type.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GoogleSearchRetrievalDict:
  dynamic_retrieval_config
```

----------------------------------------

TITLE: API Reference for LatLngDict Type
DESCRIPTION: A dictionary representation of geographical coordinates, mirroring the `LatLng` type. It provides a convenient way to pass latitude and longitude values.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LatLngDict:
  latitude
  longitude
```

----------------------------------------

TITLE: DistillationHyperParameters API Reference
DESCRIPTION: API documentation for the `DistillationHyperParameters` type, detailing its attributes for configuring distillation hyperparameters in the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DistillationHyperParameters:
  adapter_size
  epoch_count
  learning_rate_multiplier
```

----------------------------------------

TITLE: API Reference for GroundingChunkWeb Type
DESCRIPTION: Defines the structure and members of the `GroundingChunkWeb` type within the `genai.types` module, specifying web-related information like domain, title, and URI.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingChunkWeb:
  domain
  title
  uri
```

----------------------------------------

TITLE: LiveConnectParameters API Reference
DESCRIPTION: Defines parameters for establishing a LiveConnect session, including configuration and model specifications.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveConnectParameters:
  config
  model
```

----------------------------------------

TITLE: DistillationSpecDict API Reference
DESCRIPTION: API documentation for the `DistillationSpecDict` type, detailing its attributes for specifying distillation processes in a dictionary format within the Google GenAI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
DistillationSpecDict:
  base_teacher_model
  hyper_parameters
  pipeline_root_directory
  student_model
  training_dataset_uri
  tuned_teacher_model_source
  validation_dataset_uri
```

----------------------------------------

TITLE: GroundingSupportDict Type Definition
DESCRIPTION: Defines the `GroundingSupportDict` type, likely a dictionary representation of `GroundingSupport`, including confidence scores and chunk indices.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingSupportDict:
  confidence_scores
  grounding_chunk_indices
  segment
```

----------------------------------------

TITLE: LiveMusicClientMessageDict API Reference
DESCRIPTION: A dictionary representation of a client message for LiveMusic, mirroring the LiveMusicClientMessage class.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicClientMessageDict:
  client_content
  music_generation_config
  playback_control
  setup
```

----------------------------------------

TITLE: GenerationConfigThinkingConfig API Reference
DESCRIPTION: Defines the structure and properties for the `GenerationConfigThinkingConfig` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerationConfigThinkingConfig:
  include_thoughts: Property of GenerationConfigThinkingConfig.
  thinking_budget: Property of GenerationConfigThinkingConfig.
```

----------------------------------------

TITLE: HarmCategory Enum Definition
DESCRIPTION: Defines the `HarmCategory` enumeration, listing various categories of potentially harmful content that can be identified and blocked.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
HarmCategory (Enum):
  HARM_CATEGORY_CIVIC_INTEGRITY
  HARM_CATEGORY_DANGEROUS_CONTENT
  HARM_CATEGORY_HARASSMENT
  HARM_CATEGORY_HATE_SPEECH
  HARM_CATEGORY_SEXUALLY_EXPLICIT
  HARM_CATEGORY_UNSPECIFIED
```

----------------------------------------

TITLE: API Reference for LiveMusicGenerationConfig
DESCRIPTION: Defines the configuration parameters for live music generation, including various musical attributes and generation controls such as BPM, brightness, density, guidance, and muting options for bass and drums.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicGenerationConfig:
  - bpm
  - brightness
  - density
  - guidance
  - mute_bass
  - mute_drums
  - only_bass_and_drums
  - scale
  - seed
  - temperature
  - top_k
```

----------------------------------------

TITLE: GenerationConfigRoutingConfigManualRoutingModeDict API Reference
DESCRIPTION: Defines the structure and properties for the `GenerationConfigRoutingConfigManualRoutingModeDict` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerationConfigRoutingConfigManualRoutingModeDict:
  model_name: Property of GenerationConfigRoutingConfigManualRoutingModeDict.
```

----------------------------------------

TITLE: HarmSeverity Enum Definition
DESCRIPTION: Defines the `HarmSeverity` enumeration, indicating the severity level of identified harmful content.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
HarmSeverity (Enum):
  HARM_SEVERITY_HIGH
  HARM_SEVERITY_LOW
  HARM_SEVERITY_MEDIUM
  HARM_SEVERITY_NEGLIGIBLE
  HARM_SEVERITY_UNSPECIFIED
```

----------------------------------------

TITLE: API Reference for LiveMusicServerSetupComplete
DESCRIPTION: A marker type indicating that the live music server setup process has been completed.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicServerSetupComplete:
```

----------------------------------------

TITLE: GenerationConfigRoutingConfigManualRoutingMode API Reference
DESCRIPTION: Defines the structure and properties for the `GenerationConfigRoutingConfigManualRoutingMode` type within the `genai.types` module. This type is typically used for configuration or data representation in the Google Generative AI library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GenerationConfigRoutingConfigManualRoutingMode:
  model_name: Property of GenerationConfigRoutingConfigManualRoutingMode.
```

----------------------------------------

TITLE: HttpOptions Type Definition
DESCRIPTION: Defines the `HttpOptions` type, which encapsulates various configuration settings for HTTP client requests, such as timeouts, headers, and API versions.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
HttpOptions:
  api_version
  async_client_args
  base_url
  client_args
  extra_body
  headers
  retry_options
  timeout
```

----------------------------------------

TITLE: GenAI Python Library Live Server and Logprobs Types
DESCRIPTION: Defines the various data structures and message formats used for real-time communication with the GenAI live server, including content, messages, session updates, tool calls, and log probability results. These types are typically found within the `genai.types` module, providing the schema for data exchange.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveServerContentDict:
  - model_turn
  - output_transcription
  - turn_complete
  - url_context_metadata
LiveServerGoAway:
  - time_left
LiveServerGoAwayDict:
  - time_left
LiveServerMessage:
  - go_away
  - server_content
  - session_resumption_update
  - setup_complete
  - tool_call
  - tool_call_cancellation
  - usage_metadata
  - data
  - text
LiveServerMessageDict:
  - go_away
  - server_content
  - session_resumption_update
  - setup_complete
  - tool_call
  - tool_call_cancellation
  - usage_metadata
LiveServerSessionResumptionUpdate:
  - last_consumed_client_message_index
  - new_handle
  - resumable
LiveServerSessionResumptionUpdateDict:
  - last_consumed_client_message_index
  - new_handle
  - resumable
LiveServerSetupComplete
LiveServerSetupCompleteDict
LiveServerToolCall:
  - function_calls
LiveServerToolCallCancellation:
  - ids
LiveServerToolCallCancellationDict:
  - ids
LiveServerToolCallDict:
  - function_calls
LogprobsResult:
  - chosen_candidates
  - top_candidates
LogprobsResultCandidate
```

----------------------------------------

TITLE: HarmBlockMethod Enum Definition
DESCRIPTION: Defines the `HarmBlockMethod` enumeration, specifying methods for blocking harmful content, such as by probability or severity.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
HarmBlockMethod (Enum):
  HARM_BLOCK_METHOD_UNSPECIFIED
  PROBABILITY
  SEVERITY
```

----------------------------------------

TITLE: Google Generative AI Python Library API Types Reference
DESCRIPTION: This section provides a comprehensive reference for the data types and classes used within the Google Generative AI Python library, detailing their properties and methods. It covers various response, retry, image, and request-related structures, along with JSON schema definitions.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
HttpResponse:
  body:
  headers:
HttpResponseDict:
  body:
  headers:
HttpRetryOptions:
  attempts:
  exp_base:
  http_status_codes:
  initial_delay:
  jitter:
  max_delay:
HttpRetryOptionsDict:
  attempts:
  exp_base:
  http_status_codes:
  initial_delay:
  jitter:
  max_delay:
Image:
  gcs_uri:
  image_bytes:
  mime_type:
  from_file():
  model_post_init():
  save():
  show():
ImageDict:
  gcs_uri:
  image_bytes:
  mime_type:
ImagePromptLanguage:
  auto:
  en:
  hi:
  ja:
  ko:
InlinedRequest:
  config:
  contents:
  model:
InlinedRequestDict:
  config:
  contents:
  model:
InlinedResponse:
  error:
  response:
InlinedResponseDict:
  error:
  response:
Interval:
  end_time:
  start_time:
IntervalDict:
  end_time:
  start_time:
JSONSchema:
  any_of:
  default:
  description:
  enum:
  format:
  items:
  max_items:
```

----------------------------------------

TITLE: API Reference for MaskReferenceMode Enum
DESCRIPTION: Defines the enumeration for different mask reference modes, such as background, foreground, semantic, and user-provided.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
MaskReferenceMode:
  MASK_MODE_BACKGROUND
  MASK_MODE_DEFAULT
  MASK_MODE_FOREGROUND
  MASK_MODE_SEMANTIC
  MASK_MODE_USER_PROVIDED
```

----------------------------------------

TITLE: HarmBlockThreshold Enum Definition
DESCRIPTION: Defines the `HarmBlockThreshold` enumeration, indicating the threshold levels at which harmful content should be blocked.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
HarmBlockThreshold (Enum):
  BLOCK_LOW_AND_ABOVE
  BLOCK_MEDIUM_AND_ABOVE
  BLOCK_NONE
  BLOCK_ONLY_HIGH
  HARM_BLOCK_THRESHOLD_UNSPECIFIED
  OFF
```

----------------------------------------

TITLE: LiveClientSetup API Reference
DESCRIPTION: Defines configuration options and properties for setting up a live client connection within the genai library, specifying model, audio transcription, proactivity, session resumption, system instructions, and tools.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveClientSetup:
  - model
  - output_audio_transcription
  - proactivity
  - session_resumption
  - system_instruction
  - tools
```

----------------------------------------

TITLE: API Reference for genai.types.PartnerModelTuningSpec
DESCRIPTION: Documents the structure and members of the `PartnerModelTuningSpec` type within the `genai.types` module, specifying parameters for partner model tuning.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
PartnerModelTuningSpec:
  hyper_parameters
  training_dataset_uri
  validation_dataset_uri
```

----------------------------------------

TITLE: API Reference for Language Enum
DESCRIPTION: An enumeration for specifying programming languages, primarily used in contexts where language identification is necessary. It includes an unspecified option and Python.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Language:
  LANGUAGE_UNSPECIFIED
  PYTHON
```

----------------------------------------

TITLE: LiveClientSetupDict API Reference
DESCRIPTION: Represents a dictionary-based configuration for live client setup, mirroring the LiveClientSetup class properties for serialization or dictionary-based initialization.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveClientSetupDict:
  - context_window_compression
  - generation_config
  - input_audio_transcription
  - model
  - output_audio_transcription
  - proactivity
  - session_resumption
  - system_instruction
  - tools
```

----------------------------------------

TITLE: API Reference for genai.types.PrebuiltVoiceConfigDict
DESCRIPTION: Documents the structure and members of the `PrebuiltVoiceConfigDict` type within the `genai.types` module, likely a dictionary representation of `PrebuiltVoiceConfig`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
PrebuiltVoiceConfigDict:
  voice_name
```

----------------------------------------

TITLE: API Reference for JSONSchema Type
DESCRIPTION: Defines the properties available for a JSON schema object, used for validating data structures. These properties correspond to standard JSON Schema keywords.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
JSONSchema:
  max_length
  max_properties
  maximum
  min_items
  min_length
  min_properties
  minimum
  pattern
  properties
  required
  title
  type
```

----------------------------------------

TITLE: LiveConnectConfigDict API Reference
DESCRIPTION: Represents a dictionary-based configuration for live connection settings, mirroring the LiveConnectConfig class properties for serialization or dictionary-based initialization.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveConnectConfigDict:
  - context_window_compression
  - enable_affective_dialog
  - generation_config
  - http_options
  - input_audio_transcription
  - max_output_tokens
  - media_resolution
```

----------------------------------------

TITLE: API Reference for genai.types.RagChunkPageSpan
DESCRIPTION: Documents the structure and members of the `RagChunkPageSpan` type within the `genai.types` module, defining the page span for a RAG chunk.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
RagChunkPageSpan:
  first_page
  last_page
```

----------------------------------------

TITLE: API Reference for JSONSchemaType Enum
DESCRIPTION: An enumeration representing the fundamental data types supported by JSON Schema. This enum is used to specify the expected type of a JSON value.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
JSONSchemaType:
  ARRAY
  BOOLEAN
  INTEGER
  NULL
  NUMBER
  OBJECT
  STRING
```

----------------------------------------

TITLE: LiveConnectConstraints API Reference
DESCRIPTION: Specifies constraints for LiveConnect operations, typically defining allowed configurations and models.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveConnectConstraints:
  config
  model
```

----------------------------------------

TITLE: API Definition for SafetyAttributes
DESCRIPTION: Defines the structure and attributes of the `SafetyAttributes` type. This class encapsulates various safety-related properties, including `categories`, `content_type`, and `scores` to assess content safety.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SafetyAttributes:
  categories
  content_type
  scores
```

----------------------------------------

TITLE: API Definition for Scale Enum
DESCRIPTION: Defines the `Scale` enumeration, listing various musical scales. This enum provides predefined values for different musical keys and an option for an unspecified scale.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Scale:
  A_FLAT_MAJOR_F_MINOR
  A_MAJOR_G_FLAT_MINOR
  B_FLAT_MAJOR_G_MINOR
  B_MAJOR_A_FLAT_MINOR
  C_MAJOR_A_MINOR
  D_FLAT_MAJOR_B_FLAT_MINOR
  D_MAJOR_B_MINOR
  E_FLAT_MAJOR_C_MINOR
  E_MAJOR_D_FLAT_MINOR
  F_MAJOR_D_MINOR
  G_FLAT_MAJOR_E_FLAT_MINOR
  G_MAJOR_E_MINOR
  SCALE_UNSPECIFIED
```

----------------------------------------

TITLE: LiveConnectConstraintsDict API Reference
DESCRIPTION: A dictionary representation of constraints for LiveConnect operations, mirroring the LiveConnectConstraints class.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveConnectConstraintsDict:
  config
  model
```

----------------------------------------

TITLE: API Definition for SafetyAttributesDict
DESCRIPTION: Defines the dictionary representation of `SafetyAttributes`. This type mirrors the `SafetyAttributes` class, providing a dictionary-based structure for `categories`, `content_type`, and `scores` related to content safety.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SafetyAttributesDict:
  categories
  content_type
  scores
```

----------------------------------------

TITLE: genai.types.Schema API Reference
DESCRIPTION: API documentation for the `Schema` class within `genai.types`, detailing its properties and methods related to schema definition, often used for structured data representation.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Schema:
  max_items
  max_length
  max_properties
  maximum
  min_items
  min_length
  min_properties
  minimum
  nullable
  pattern
  properties
  property_ordering
  ref
  required
  title
  type
  from_json_schema()
  json_schema
```

----------------------------------------

TITLE: LiveMusicClientContent API Reference
DESCRIPTION: Represents client-side content for LiveMusic interactions, such as weighted prompts.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicClientContent:
  weighted_prompts
```

----------------------------------------

TITLE: API Definition for SafetyFilterLevel Enum
DESCRIPTION: Defines the `SafetyFilterLevel` enumeration, which specifies various blocking levels for safety filters. These levels determine the strictness with which potentially unsafe content is filtered.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SafetyFilterLevel:
  BLOCK_LOW_AND_ABOVE
  BLOCK_MEDIUM_AND_ABOVE
  BLOCK_NONE
  BLOCK_ONLY_HIGH
```

----------------------------------------

TITLE: genai.types.SchemaDict API Reference
DESCRIPTION: API documentation for the `SchemaDict` class within `genai.types`, detailing its properties related to schema dictionary definitions, which are typically used for representing schema attributes in a dictionary format.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SchemaDict:
  additional_properties
  any_of
  default
  defs
  description
  enum
  example
  format
  max_items
  max_length
  max_properties
  maximum
  min_items
  min_length
  min_properties
  minimum
  nullable
  pattern
  properties
  property_ordering
  ref
  required
  title
  type
```

----------------------------------------

TITLE: LiveMusicConnectParametersDict API Reference
DESCRIPTION: A dictionary representation of connection parameters for the LiveMusic service, mirroring the LiveMusicConnectParameters class.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicConnectParametersDict:
  model
```

----------------------------------------

TITLE: genai.types.SearchEntryPoint API Reference
DESCRIPTION: API documentation for the `SearchEntryPoint` class within `genai.types`, detailing its properties related to search entry points, such as rendered content and SDK blob information.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SearchEntryPoint:
  rendered_content
  sdk_blob
```

----------------------------------------

TITLE: genai.types.SessionResumptionConfigDict API Reference
DESCRIPTION: API documentation for the `SessionResumptionConfigDict` class within `genai.types`, detailing properties for dictionary representations of session resumption configurations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SessionResumptionConfigDict:
  handle
  transparent
```

----------------------------------------

TITLE: LiveMusicFilteredPromptDict API Reference
DESCRIPTION: A dictionary representation of a filtered prompt for LiveMusic, mirroring the LiveMusicFilteredPrompt class.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicFilteredPromptDict:
```

----------------------------------------

TITLE: genai.types.Segment API Reference
DESCRIPTION: API documentation for the `Segment` class within `genai.types`, detailing properties that define a text segment, including its start and end indices, part index, and the text content itself.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Segment:
  end_index
  part_index
  start_index
  text
```

----------------------------------------

TITLE: Define SpeechConfigDict Type (APIDOC)
DESCRIPTION: Documents the `SpeechConfigDict` type, a dictionary representation of `SpeechConfig`, detailing its `language_code`, `multi_speaker_voice_config`, and `voice_config` properties.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SpeechConfigDict:
  language_code
  multi_speaker_voice_config
  voice_config
```

----------------------------------------

TITLE: API Reference for LiveMusicServerMessage
DESCRIPTION: Defines the structure of messages sent from the live music server, which can include filtered prompts, server content, or a setup complete signal.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicServerMessage:
  - filtered_prompt
  - server_content
  - setup_complete
```

----------------------------------------

TITLE: Define SpeakerVoiceConfigDict Type (APIDOC)
DESCRIPTION: Documents the `SpeakerVoiceConfigDict` type, a dictionary representation of `SpeakerVoiceConfig`, detailing its `speaker` and `voice_config` properties.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SpeakerVoiceConfigDict:
  speaker
  voice_config
```

----------------------------------------

TITLE: Define StartSensitivity Type (APIDOC)
DESCRIPTION: Documents the `StartSensitivity` type, an enumeration or set of predefined values indicating different levels of start sensitivity. It includes `START_SENSITIVITY_HIGH`, `START_SENSITIVITY_LOW`, and `START_SENSITIVITY_UNSPECIFIED`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
StartSensitivity:
  START_SENSITIVITY_HIGH
  START_SENSITIVITY_LOW
  START_SENSITIVITY_UNSPECIFIED
```

----------------------------------------

TITLE: API Reference for genai.types.Part
DESCRIPTION: Documents the structure and members of the `Part` type within the `genai.types` module, representing a component of a generative AI content, such as text, code, or function calls.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Part:
  code_execution_result
  executable_code
  file_data
  function_call
  function_response
  inline_data
  text
  thought
  thought_signature
  video_metadata
  from_bytes()
  from_code_execution_result()
  from_executable_code()
  from_function_call()
  from_function_response()
  from_text()
  from_uri()
```

----------------------------------------

TITLE: Define SpeechConfig Type (APIDOC)
DESCRIPTION: Documents the `SpeechConfig` type, which encapsulates various settings for speech generation. It includes `language_code`, `multi_speaker_voice_config`, and `voice_config` properties.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SpeechConfig:
  language_code
  multi_speaker_voice_config
  voice_config
```

----------------------------------------

TITLE: Define StyleReferenceConfig Type (APIDOC)
DESCRIPTION: Documents the `StyleReferenceConfig` type, used for configuring style references. It contains the `style_description` property, likely a textual description of the desired style.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
StyleReferenceConfig:
  style_description
```

----------------------------------------

TITLE: API Reference for genai.types.PartDict
DESCRIPTION: Documents the structure and members of the `PartDict` type within the `genai.types` module, likely a dictionary representation of a `Part` object.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
PartDict:
  code_execution_result
  executable_code
  file_data
  function_call
  function_response
  inline_data
  text
  thought
  thought_signature
  video_metadata
```

----------------------------------------

TITLE: Define StyleReferenceConfigDict Type (APIDOC)
DESCRIPTION: Documents the `StyleReferenceConfigDict` type, a dictionary representation of `StyleReferenceConfig`, detailing its `style_description` property.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
StyleReferenceConfigDict:
  style_description
```

----------------------------------------

TITLE: API Reference for GoogleTypeDate Type
DESCRIPTION: Defines the structure and members of the `GoogleTypeDate` type within the `genai.types` module, representing a date with day, month, and year components.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GoogleTypeDate:
  day
  month
  year
```

----------------------------------------

TITLE: API Reference for genai.types.PersonGeneration
DESCRIPTION: Documents the structure and members of the `PersonGeneration` type within the `genai.types` module, likely related to content generation settings concerning persons.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
PersonGeneration:
  ALLOW_ADULT
  ALLOW_ALL
  DONT_ALLOW
```

----------------------------------------

TITLE: API Reference for SubjectReferenceImageDict
DESCRIPTION: Defines the SubjectReferenceImageDict type and its properties, used for referencing images related to subjects.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SubjectReferenceImageDict:
  reference_image
  reference_type
```

----------------------------------------

TITLE: HttpOptionsDict Type Definition
DESCRIPTION: Defines the `HttpOptionsDict` type, likely a dictionary representation of `HttpOptions`, providing similar HTTP client configuration parameters.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
HttpOptionsDict:
  api_version
  async_client_args
  base_url
  client_args
  extra_body
  headers
  retry_options
  timeout
```

----------------------------------------

TITLE: API Reference for genai.types.RagChunkPageSpanDict
DESCRIPTION: Documents the structure and members of the `RagChunkPageSpanDict` type within the `genai.types` module, likely a dictionary representation of `RagChunkPageSpan`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
RagChunkPageSpanDict:
```

----------------------------------------

TITLE: API Reference for SupervisedHyperParameters
DESCRIPTION: Defines the SupervisedHyperParameters type, which encapsulates configuration settings for supervised model training.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedHyperParameters:
  adapter_size
  epoch_count
  learning_rate_multiplier
```

----------------------------------------

TITLE: HttpResponse Type Definition
DESCRIPTION: Defines the `HttpResponse` type, representing the structure of an HTTP response.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
HttpResponse
```

----------------------------------------

TITLE: Google Cloud Generative AI Python SDK Types Reference
DESCRIPTION: Detailed API documentation for data structures and configuration objects within the `genai.types` module, including RAG retrieval, ranking, and image reference configurations. These types define the expected input and output formats for various API calls.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
genai.types.RagChunkPageSpanDict:
  first_page
  last_page
genai.types.RagRetrievalConfig:
  filter
  hybrid_search
  ranking
  top_k
genai.types.RagRetrievalConfigDict:
  filter
  hybrid_search
  ranking
  top_k
genai.types.RagRetrievalConfigFilter:
  metadata_filter
  vector_distance_threshold
  vector_similarity_threshold
genai.types.RagRetrievalConfigFilterDict:
  metadata_filter
  vector_distance_threshold
  vector_similarity_threshold
genai.types.RagRetrievalConfigHybridSearch:
  alpha
genai.types.RagRetrievalConfigHybridSearchDict:
  alpha
genai.types.RagRetrievalConfigRanking:
  llm_ranker
  rank_service
genai.types.RagRetrievalConfigRankingDict:
  llm_ranker
  rank_service
genai.types.RagRetrievalConfigRankingLlmRanker:
  model_name
genai.types.RagRetrievalConfigRankingLlmRankerDict:
  model_name
genai.types.RagRetrievalConfigRankingRankService:
  model_name
genai.types.RagRetrievalConfigRankingRankServiceDict:
  model_name
genai.types.RawReferenceImage:
  reference_id
  reference_image
  reference_type
genai.types.RawReferenceImageDict:
  reference_id
  reference_image
  reference_type
genai.types.RealtimeInputConfig:
```

----------------------------------------

TITLE: SupervisedTuningDataStatsDict API Reference
DESCRIPTION: Defines a dictionary-like structure for statistics related to supervised tuning data, including distributions of user input tokens, messages per example, and user output tokens.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedTuningDataStatsDict:
  user_input_token_distribution
  user_message_per_example_distribution
  user_output_token_distribution
```

----------------------------------------

TITLE: ApiKeyConfigDict Type Definition
DESCRIPTION: Represents the dictionary definition for the `ApiKeyConfigDict` type, a dictionary representation of `ApiKeyConfig`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ApiKeyConfigDict:
  api_key_string
```

----------------------------------------

TITLE: Google GenAI Python API Types Module Reference
DESCRIPTION: This section provides a detailed reference for the data types and configurations available in the `genai.types` module of the Google GenAI Python library. It includes definitions for various input, replay, and retrieval related classes and their respective attributes, outlining their structure and available properties.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
RealtimeInputConfig:
  activity_handling
  automatic_activity_detection
  turn_coverage
RealtimeInputConfigDict:
  activity_handling
  automatic_activity_detection
  turn_coverage
ReplayFile:
  interactions
  replay_id
ReplayFileDict:
  interactions
  replay_id
ReplayInteraction:
  request
  response
ReplayInteractionDict:
  request
  response
ReplayRequest:
  body_segments
  headers
  method
  url
ReplayRequestDict:
  body_segments
  headers
  method
  url
ReplayResponse:
  body_segments
  headers
  sdk_response_segments
  status_code
ReplayResponseDict:
  body_segments
  headers
  sdk_response_segments
  status_code
Retrieval:
  disable_attribution
  vertex_ai_search
  vertex_rag_store
RetrievalConfig:
  language_code
  lat_lng
RetrievalConfigDict:
  language_code
  lat_lng
RetrievalDict:
  disable_attribution
  vertex_ai_search
  vertex_rag_store
RetrievalMetadata:
  google_search_dynamic_retrieval_score
RetrievalMetadataDict:
```

----------------------------------------

TITLE: SupervisedTuningDatasetDistribution API Reference
DESCRIPTION: Represents the distribution of a supervised tuning dataset, providing statistical measures like sum, mean, median, min, max, and percentiles, along with bucketed data.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedTuningDatasetDistribution:
  billable_sum
  buckets
  max
  mean
  median
  min
  p5
  p95
  sum
```

----------------------------------------

TITLE: ActivityStartDict Type Definition
DESCRIPTION: Represents the dictionary definition for the `ActivityStartDict` type, a dictionary representation of `ActivityStart`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ActivityStartDict:
```

----------------------------------------

TITLE: API Definition for RetrievalMetadataDict
DESCRIPTION: Defines the structure and attributes of the `RetrievalMetadataDict` type, specifically detailing its `google_search_dynamic_retrieval_score` attribute. This dictionary likely holds metadata related to retrieval operations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
RetrievalMetadataDict:
  google_search_dynamic_retrieval_score
```

----------------------------------------

TITLE: ToolConfigDict Type Definition
DESCRIPTION: Defines configuration settings for tools, including function calling and retrieval, within the genai library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ToolConfigDict:
  function_calling_config
  retrieval_config
```

----------------------------------------

TITLE: Configure Socks5 Proxy for httpx.Client
DESCRIPTION: Illustrates how to configure a Socks5 proxy for httpx.Client by passing proxy settings via HttpOptions. This requires the 'httpx[socks]' package to be installed.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
http_options = types.HttpOptions(
    client_args={'proxy': 'socks5://user:pass@host:port'},
    async_client_args={'proxy': 'socks5://user:pass@host:port'},
)

client=Client(..., http_options=http_options)
```

----------------------------------------

TITLE: API Definition for SafetyRating
DESCRIPTION: Defines the structure and attributes of the `SafetyRating` type. This class provides detailed information about the safety assessment of content, including whether it was `blocked`, its `category`, `probability`, `probability_score`, `severity`, and `severity_score`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SafetyRating:
  blocked
  category
  probability
  probability_score
  severity
  severity_score
```

----------------------------------------

TITLE: Transcription Type Definition
DESCRIPTION: Represents the result of a transcription process, including its finished status and text content.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Transcription:
  finished
  text
```

----------------------------------------

TITLE: Configure Async Client Options with Aiohttp
DESCRIPTION: Demonstrates how to pass additional arguments to the underlying 'aiohttp.ClientSession.request()' method via 'http_options.async_client_args'. This allows fine-grained control over asynchronous client behavior, such as setting cookies or SSL options.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
http_options = types.HttpOptions(
    async_client_args={'cookies': ..., 'ssl': ...},
)

client=Client(..., http_options=http_options)
```

----------------------------------------

TITLE: genai.types.SearchEntryPointDict API Reference
DESCRIPTION: API documentation for the `SearchEntryPointDict` class within `genai.types`, detailing its properties for dictionary representations of search entry points.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SearchEntryPointDict:
  rendered_content
  sdk_blob
```

----------------------------------------

TITLE: TunedModelCheckpointDict Type Definition
DESCRIPTION: Dictionary representation of a tuned model checkpoint, including ID, endpoint, epoch, and step.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TunedModelCheckpointDict:
  checkpoint_id
  endpoint
  epoch
  step
```

----------------------------------------

TITLE: Configure Vertex AI Client via Environment Variables
DESCRIPTION: Sets multiple environment variables ('GOOGLE_GENAI_USE_VERTEXAI', 'GOOGLE_CLOUD_PROJECT', 'GOOGLE_CLOUD_LOCATION') to configure the Gen AI client for Vertex AI. This enables client initialization without hardcoding credentials.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Shell
CODE:
```
export GOOGLE_GENAI_USE_VERTEXAI=true
export GOOGLE_CLOUD_PROJECT='your-project-id'
export GOOGLE_CLOUD_LOCATION='us-central1'
```

----------------------------------------

TITLE: genai.types.SegmentDict API Reference
DESCRIPTION: API documentation for the `SegmentDict` class within `genai.types`, detailing properties for dictionary representations of text segments.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SegmentDict:
  end_index
  part_index
  start_index
  text
```

----------------------------------------

TITLE: TuningDataStatsDict Type Definition
DESCRIPTION: Dictionary representation of tuning data statistics, for distillation and supervised tuning.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TuningDataStatsDict:
  distillation_data_stats
  supervised_tuning_data_stats
```

----------------------------------------

TITLE: genai.tunings Module API Reference
DESCRIPTION: API documentation for the `genai.tunings` module, outlining methods for managing and performing model tuning operations, including retrieving, listing, and initiating tuning processes.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AsyncTunings:
  get()
  list()
  tune()
Tunings:
  get()
  list()
  tune()
```

----------------------------------------

TITLE: genai.types.SessionResumptionConfig API Reference
DESCRIPTION: API documentation for the `SessionResumptionConfig` class within `genai.types`, detailing properties related to session resumption configuration, such as handle and transparency settings.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SessionResumptionConfig:
  handle
  transparent
```

----------------------------------------

TITLE: TuningDataset Type Definition
DESCRIPTION: Defines a dataset used for tuning, specifying examples or a GCS URI.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TuningDataset:
  examples
  gcs_uri
```

----------------------------------------

TITLE: List and Page Through Batch Prediction Jobs (Python)
DESCRIPTION: Provides examples for listing batch prediction jobs, including synchronous and asynchronous methods, and how to use pagers to iterate through results efficiently. This allows for managing and monitoring multiple batch jobs.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google.genai import types

for job in client.batches.list(config=types.ListBatchJobsConfig(page_size=10)):
    print(job)
```

LANGUAGE: Python
CODE:
```
from google.genai import types

pager = client.batches.list(config=types.ListBatchJobsConfig(page_size=10))
print(pager.page_size)
print(pager[0])
pager.next_page()
print(pager[0])
```

LANGUAGE: Python
CODE:
```
from google.genai import types

async for job in await client.aio.batches.list(
    config=types.ListBatchJobsConfig(page_size=10)
):
    print(job)
```

LANGUAGE: Python
CODE:
```
from google.genai import types

async_pager = await client.aio.batches.list(
    config=types.ListBatchJobsConfig(page_size=10)
)
print(async_pager.page_size)
print(async_pager[0])
await async_pager.next_page()
print(async_pager[0])
```

----------------------------------------

TITLE: genai.types.SlidingWindow API Reference
DESCRIPTION: API documentation for the `SlidingWindow` class within `genai.types`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SlidingWindow:
```

----------------------------------------

TITLE: TuningDatasetDict Type Definition
DESCRIPTION: Dictionary representation of a tuning dataset, including examples.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TuningDatasetDict:
  examples
```

----------------------------------------

TITLE: Define SpeakerVoiceConfig Type (APIDOC)
DESCRIPTION: Documents the `SpeakerVoiceConfig` type, used for configuring speaker voice settings. It includes properties for specifying the `speaker` and general `voice_config`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SpeakerVoiceConfig:
  speaker
  voice_config
```

----------------------------------------

TITLE: Google Cloud Generative AI Python API: Tuning Types Reference
DESCRIPTION: Detailed API reference for data types and classes used in model tuning within the `genai.types` module, including `TuningDatasetDict`, `TuningExample`, `TuningJob`, and related structures.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TuningDatasetDict:
  gcs_uri: str

TuningExample:
  output: str
  text_input: str

TuningExampleDict:
  output: str
  text_input: str

TuningJob:
  base_model: str
  create_time: datetime
  description: str
  distillation_spec: DistillationSpec
  encryption_spec: EncryptionSpec
  end_time: datetime
  error: Error
  experiment: Experiment
  labels: dict
  name: str
  partner_model_tuning_spec: PartnerModelTuningSpec
  pipeline_job: PipelineJob
  service_account: str
  start_time: datetime
  state: TuningJobState
  supervised_tuning_spec: SupervisedTuningSpec
  tuned_model: TunedModel
  tuned_model_display_name: str
  tuning_data_stats: TuningDataStats
  update_time: datetime
  has_ended() -> bool
  has_succeeded() -> bool

TuningJobDict:
  base_model: str
  create_time: datetime
  description: str
  distillation_spec: DistillationSpec
  encryption_spec: EncryptionSpec
  end_time: datetime
  error: Error
  experiment: Experiment
  labels: dict
  name: str
  partner_model_tuning_spec: PartnerModelTuningSpec
  pipeline_job: PipelineJob
  service_account: str
  start_time: datetime
  state: TuningJobState
  supervised_tuning_spec: SupervisedTuningSpec
  tuned_model: TunedModel
  tuned_model_display_name: str
  tuning_data_stats: TuningDataStats
  update_time: datetime

TuningValidationDataset:
  gcs_uri: str

TuningValidationDatasetDict:
  gcs_uri: str

TurnCoverage:
  TURN_COVERAGE_UNSPECIFIED: int
  TURN_INCLUDES_ALL_INPUT: int
  TURN_INCLUDES_ONLY_ACTIVITY: int
```

----------------------------------------

TITLE: LiveConnectConfig API Reference
DESCRIPTION: Specifies comprehensive configuration parameters for establishing and managing a live connection, including context window compression, affective dialog, generation settings, HTTP options, audio transcription, token limits, media resolution, proactivity, real-time input, response modalities, seed, session resumption, speech configuration, system instructions, temperature, tools, top_k, and top_p.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveConnectConfig:
  - context_window_compression
  - enable_affective_dialog
  - generation_config
  - http_options
  - input_audio_transcription
  - max_output_tokens
  - media_resolution
  - output_audio_transcription
  - proactivity
  - realtime_input_config
  - response_modalities
  - seed
  - session_resumption
  - speech_config
  - system_instruction
  - temperature
  - tools
  - top_k
  - top_p
```

----------------------------------------

TITLE: Define SubjectReferenceConfigDict Type (APIDOC)
DESCRIPTION: Documents the `SubjectReferenceConfigDict` type, a dictionary representation of `SubjectReferenceConfig`, detailing its `subject_description` and `subject_type` properties.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SubjectReferenceConfigDict:
  subject_description
  subject_type
```

----------------------------------------

TITLE: API Definition: UpscaleImageResponse Type
DESCRIPTION: API definition for the UpscaleImageResponse type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UpscaleImageResponse
  .generated_images
```

----------------------------------------

TITLE: LiveConnectParametersDict API Reference
DESCRIPTION: A dictionary representation of parameters for LiveConnect sessions, mirroring the LiveConnectParameters class.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveConnectParametersDict:
  config
  model
```

----------------------------------------

TITLE: Define SubjectReferenceImage Type (APIDOC)
DESCRIPTION: Documents the `SubjectReferenceImage` type, which specifies how to reference an image for a subject. It includes properties for `config`, `reference_id`, `reference_image`, `reference_type`, and `subject_image_config`.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SubjectReferenceImage:
  config
  reference_id
  reference_image
  reference_type
  subject_image_config
```

----------------------------------------

TITLE: API Definition: UpscaleImageResponseDict Type
DESCRIPTION: API definition for the UpscaleImageResponseDict type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UpscaleImageResponseDict
  .generated_images
```

----------------------------------------

TITLE: LiveMusicClientContentDict API Reference
DESCRIPTION: A dictionary representation of client-side content for LiveMusic interactions, mirroring the LiveMusicClientContent class.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicClientContentDict:
  weighted_prompts
```

----------------------------------------

TITLE: API Reference for SupervisedHyperParametersDict
DESCRIPTION: Defines the SupervisedHyperParametersDict type, likely a dictionary representation of supervised model training hyperparameters.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedHyperParametersDict:
  adapter_size
  epoch_count
  learning_rate_multiplier
```

----------------------------------------

TITLE: API Definition: UrlContext Type
DESCRIPTION: API definition for the UrlContext type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UrlContext
```

----------------------------------------

TITLE: LiveMusicClientSetup API Reference
DESCRIPTION: Specifies setup parameters for the LiveMusic client, typically including the model to be used.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicClientSetup:
  model
```

----------------------------------------

TITLE: API Reference for SupervisedTuningDataStats
DESCRIPTION: Defines the SupervisedTuningDataStats type, providing statistics and metrics related to supervised model tuning data.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedTuningDataStats:
  dropped_example_reasons
  total_billable_character_count
  total_billable_token_count
  total_truncated_example_count
  total_tuning_character_count
  truncated_example_indices
  tuning_dataset_example_count
  tuning_step_count
  user_dataset_examples
  user_input_token_distribution
  user_message_per_example_distribution
  user_output_token_distribution
```

----------------------------------------

TITLE: API Definition: UrlContextMetadata Type
DESCRIPTION: API definition for the UrlContextMetadata type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UrlContextMetadata
  .url_metadata
```

----------------------------------------

TITLE: LiveMusicClientSetupDict API Reference
DESCRIPTION: A dictionary representation of setup parameters for the LiveMusic client, mirroring the LiveMusicClientSetup class.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicClientSetupDict:
  model
```

----------------------------------------

TITLE: SupervisedTuningDatasetDistributionDatasetBucketDict API Reference
DESCRIPTION: Defines a dictionary-like structure for a single bucket within a supervised tuning dataset distribution, specifying its count and the left and right bounds of the bucket.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
SupervisedTuningDatasetDistributionDatasetBucketDict:
  count
  left
  right
```

----------------------------------------

TITLE: API Definition: UrlMetadata Type
DESCRIPTION: API definition for the UrlMetadata type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UrlMetadata
  .retrieved_url
  .url_retrieval_status
```

----------------------------------------

TITLE: LiveMusicFilteredPrompt API Reference
DESCRIPTION: Represents a prompt that has been filtered by the LiveMusic service, including the reason for filtering and the original text.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicFilteredPrompt:
  filtered_reason
  text
```

----------------------------------------

TITLE: ToolDict Type Definition
DESCRIPTION: Represents a collection of available tools, such as code execution, web search, and function declarations, for the genai library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ToolDict:
  code_execution
  enterprise_web_search
  function_declarations
  google_maps
  google_search
  google_search_retrieval
  retrieval
  url_context
```

----------------------------------------

TITLE: API Definition: UsageMetadataDict Type
DESCRIPTION: API definition for the UsageMetadataDict type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UsageMetadataDict
  .cache_tokens_details
  .cached_content_token_count
  .prompt_token_count
  .prompt_tokens_details
  .response_token_count
  .response_tokens_details
  .thoughts_token_count
  .tool_use_prompt_token_count
  .tool_use_prompt_tokens_details
```

----------------------------------------

TITLE: API Reference for LiveMusicServerContent
DESCRIPTION: Defines the content received from the live music server, primarily containing audio chunks.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicServerContent:
  - audio_chunks
```

----------------------------------------

TITLE: TuningDataStats Type Definition
DESCRIPTION: Statistics related to tuning data, covering distillation and supervised tuning data.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TuningDataStats:
  distillation_data_stats
  supervised_tuning_data_stats
```

----------------------------------------

TITLE: ActivityStart Type Definition
DESCRIPTION: Represents the definition for the `ActivityStart` type, typically used to indicate the beginning of an activity.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
ActivityStart:
```

----------------------------------------

TITLE: API Reference for LiveMusicServerContentDict
DESCRIPTION: Defines the dictionary-like structure for `LiveMusicServerContent`, providing a mutable or serializable representation of the server content.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicServerContentDict:
  - audio_chunks
```

----------------------------------------

TITLE: GenAI Python Library Type and Configuration Definitions
DESCRIPTION: This section details the various data types and configuration objects available in the `genai.types` module of the Googleapis GenAI Python library, including their properties and nested structures. It covers both direct configuration classes and their dictionary representations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
Type:
  ARRAY
  BOOLEAN
  INTEGER
  NULL
  NUMBER
  OBJECT
  STRING
  TYPE_UNSPECIFIED

UpdateCachedContentConfig:
  expire_time
  http_options
  ttl

UpdateCachedContentConfigDict:
  expire_time
  http_options
  ttl

UpdateModelConfig:
  default_checkpoint_id
  description
  display_name
  http_options

UpdateModelConfigDict:
  default_checkpoint_id
  description
  display_name
  http_options

UploadFileConfig:
  display_name
  http_options
  mime_type
  name

UploadFileConfigDict:
  display_name
  http_options
  mime_type
  name

UpscaleImageConfig:
  enhance_input_image
  http_options
  image_preservation_factor
  include_rai_reason
  output_compression_quality
  output_mime_type

UpscaleImageConfigDict:
  enhance_input_image
  http_options
  image_preservation_factor
  include_rai_reason
  output_compression_quality
  output_mime_type

UpscaleImageParameters:
  config
```

----------------------------------------

TITLE: API Documentation for CancelBatchJobConfigDict
DESCRIPTION: Defines the structure and members of the `CancelBatchJobConfigDict` type within the `genai` library. This dictionary-like type specifies configuration options for canceling a batch job.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
CancelBatchJobConfigDict:
  http_options
```

----------------------------------------

TITLE: API Reference for LiveMusicServerSetupCompleteDict
DESCRIPTION: A dictionary-like marker type indicating that the live music server setup process has been completed.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
LiveMusicServerSetupCompleteDict:
```

----------------------------------------

TITLE: API Definition: UrlContextDict Type
DESCRIPTION: API definition for the UrlContextDict type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UrlContextDict
```

----------------------------------------

TITLE: Structure 'contents' Argument with a Function Call Part
DESCRIPTION: Demonstrates how to include a function call within the 'contents' argument by creating a 'types.Part.from_function_call' instance, specifying the function name and arguments.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: Python
CODE:
```
from google.genai import types

contents = types.Part.from_function_call(
name='get_weather_by_location',
args={'location': 'Boston'}
)
```

----------------------------------------

TITLE: TranscriptionDict Type Definition
DESCRIPTION: Dictionary representation of a transcription result, containing finished status and text.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TranscriptionDict:
  finished
  text
```

----------------------------------------

TITLE: API Definition: UrlRetrievalStatus Type
DESCRIPTION: API definition for the UrlRetrievalStatus type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UrlRetrievalStatus
  .URL_RETRIEVAL_STATUS_ERROR
  .URL_RETRIEVAL_STATUS_SUCCESS
  .URL_RETRIEVAL_STATUS_UNSPECIFIED
```

----------------------------------------

TITLE: TunedModelInfoDict Type Definition
DESCRIPTION: Dictionary representation of tuned model information, including base model, creation, and update times.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
TunedModelInfoDict:
  base_model
  create_time
  update_time
```

----------------------------------------

TITLE: API Definition: UsageMetadata Type
DESCRIPTION: API definition for the UsageMetadata type, detailing its structure and members within the `genai` library.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
UsageMetadata
  .cache_tokens_details
  .cached_content_token_count
  .prompt_token_count
  .prompt_tokens_details
  .response_token_count
  .response_tokens_details
  .thoughts_token_count
  .tool_use_prompt_token_count
  .tool_use_prompt_tokens_details
  .total_token_count
  .traffic_type
```

----------------------------------------

TITLE: API Reference for GroundingChunkRetrievedContextDict Type
DESCRIPTION: Defines the dictionary representation and members of the `GroundingChunkRetrievedContextDict` type within the `genai.types` module, mirroring the `GroundingChunkRetrievedContext` type.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingChunkRetrievedContextDict:
  rag_chunk
  text
  title
  uri
```

----------------------------------------

TITLE: API Reference for MaskReferenceImageDict Type
DESCRIPTION: Defines the dictionary representation for an image used as a mask reference, including its configuration, reference ID, image data, and type.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
MaskReferenceImageDict:
  config
  reference_id
  reference_image
  reference_type
```

----------------------------------------

TITLE: API Reference for GroundingChunkWebDict Type
DESCRIPTION: Defines the dictionary representation and members of the `GroundingChunkWebDict` type within the `genai.types` module, mirroring the `GroundingChunkWeb` type.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
GroundingChunkWebDict:
  domain
  title
  uri
```

----------------------------------------

TITLE: AdapterSize Enum Definition
DESCRIPTION: Defines an enumeration for various adapter sizes, typically used in machine learning model configurations.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AdapterSize:
  ADAPTER_SIZE_EIGHT
  ADAPTER_SIZE_FOUR
  ADAPTER_SIZE_ONE
  ADAPTER_SIZE_SIXTEEN
  ADAPTER_SIZE_THIRTY_TWO
  ADAPTER_SIZE_TWO
  ADAPTER_SIZE_UNSPECIFIED
```

----------------------------------------

TITLE: AudioChunk Type Definition
DESCRIPTION: Represents a chunk of audio data, including its binary data, MIME type, and optional source metadata.
SOURCE: https://googleapis.github.io/python-genai/index

LANGUAGE: APIDOC
CODE:
```
AudioChunk:
  data
  mime_type
  source_metadata
```